{
    "name": "mag",
    "description": "Trace generated from Nextflow (via https://github.com/wfcommons/nextflow_workflow_tracer)",
    "createdAt": "2023-03-22T06:50:25.919057+00:00",
    "schemaVersion": "1.4",
    "wms": {
        "name": "Nextflow",
        "url": "https://www.nextflow.io/",
        "version": "23.04.1"
    },
    "workflow": {
        "repo": "https://github.com/nf-core/mag",
        "runName": "wise_torvalds",
        "executedAt": "2023-03-21T20:50:18-10:00",
        "tasks": [
            {
                "name": "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_BUILD",
                "id": "1",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "mkdir bowtie\n    bowtie2-build --threads 1 GCA_002596845.1_ASM259684v1_genomic.fna.gz \"bt2_index_base\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BOWTIE2_PHIX_REMOVAL_BUILD\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n    END_VERSIONS"
                },
                "parents": [],
                "children": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "GCA_002596845.1_ASM259684v1_genomic.fna.gz",
                        "path": "/assets/data/",
                        "sizeInBytes": 1888
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 4196364
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1352
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 17
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1347
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 4196364
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1352
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 64
                    }
                ],
                "avgCPU": 43.3,
                "inputFilesBytes": 1888,
                "outputFilesBytes": 8396860,
                "memoryInBytes": 2723840,
                "writtenBytes": 8406730,
                "readBytes": 1425055,
                "runtimeInSeconds": 1.0
            },
            {
                "name": "NFCORE_MAG.MAG.KRAKEN2_DB_PREPARATION",
                "id": "3",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "mkdir db_tmp\n    tar -xf \"minigut_kraken.tgz\" -C db_tmp\n    mkdir database\n    mv `find db_tmp/ -name \"*.k2d\"` database/\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:KRAKEN2_DB_PREPARATION\":\n        tar: $(tar --version 2>&1 | sed -n 1p | sed 's/tar (GNU tar) //')\n    END_VERSIONS"
                },
                "parents": [],
                "children": [
                    "NFCORE_MAG.MAG.KRAKEN2"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "minigut_kraken.tgz",
                        "path": "/nf-core/test-datasets/mag/test_data/",
                        "sizeInBytes": 3547
                    },
                    {
                        "link": "output",
                        "name": "hash.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 3151024
                    },
                    {
                        "link": "output",
                        "name": "opts.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 56
                    },
                    {
                        "link": "output",
                        "name": "taxo.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 469
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/a6/644e6092e3c12d271e3aba5effa524/",
                        "sizeInBytes": 55
                    }
                ],
                "avgCPU": 25.5,
                "inputFilesBytes": 3547,
                "outputFilesBytes": 3151604,
                "memoryInBytes": 3018752,
                "writtenBytes": 6316473,
                "readBytes": 3321149,
                "runtimeInSeconds": 0.163
            },
            {
                "name": "NFCORE_MAG.MAG.CENTRIFUGE_DB_PREPARATION",
                "id": "4",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "tar -xf \"minigut_cf.tar.gz\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:CENTRIFUGE_DB_PREPARATION\":\n        tar: $(tar --version 2>&1 | sed -n 1p | sed 's/tar (GNU tar) //')\n    END_VERSIONS"
                },
                "parents": [],
                "children": [
                    "NFCORE_MAG.MAG.CENTRIFUGE"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "minigut_cf.tar.gz",
                        "path": "/nf-core/test-datasets/mag/test_data/",
                        "sizeInBytes": 1771931
                    },
                    {
                        "link": "output",
                        "name": "minigut_cf.1.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 8972492
                    },
                    {
                        "link": "output",
                        "name": "minigut_cf.2.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 218756
                    },
                    {
                        "link": "output",
                        "name": "minigut_cf.3.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 76
                    },
                    {
                        "link": "output",
                        "name": "minigut_cf.4.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 36
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 58
                    }
                ],
                "avgCPU": 55.9,
                "inputFilesBytes": 1771931,
                "outputFilesBytes": 9191418,
                "memoryInBytes": 6938624,
                "writtenBytes": 18397780,
                "readBytes": 11101848,
                "runtimeInSeconds": 0.309
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION",
                "id": "2",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "mkdir buscodb\n    tar -xf bacteria_odb10.2020-03-06.tar.gz -C buscodb\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_DB_PREPARATION\":\n        tar: $(tar --version 2>&1 | sed -n 1p | sed 's/tar (GNU tar) //')\n    END_VERSIONS"
                },
                "parents": [],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "bacteria_odb10.2020-03-06.tar.gz",
                        "path": "/v5/data/lineages/",
                        "sizeInBytes": 6084321
                    },
                    {
                        "link": "output",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "bacteria_odb10.2020-03-06.tar.gz",
                        "path": "/67/3b8667566a46b50251687dc3dbcaeb/",
                        "sizeInBytes": 6084321
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/67/3b8667566a46b50251687dc3dbcaeb/",
                        "sizeInBytes": 62
                    }
                ],
                "avgCPU": 77.2,
                "inputFilesBytes": 6084321,
                "outputFilesBytes": 32986095,
                "memoryInBytes": 6909952,
                "writtenBytes": 53915501,
                "readBytes": 33230021,
                "runtimeInSeconds": 0.596
            },
            {
                "name": "NFCORE_MAG.MAG.FASTP",
                "id": "7",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "[ ! -f  test_minigut_sample2_1.fastq.gz ] && ln -s test_minigut_sample2_R1.fastq.gz test_minigut_sample2_1.fastq.gz\n        [ ! -f  test_minigut_sample2_2.fastq.gz ] && ln -s test_minigut_sample2_R2.fastq.gz test_minigut_sample2_2.fastq.gz\n        fastp \\\n            --in1 test_minigut_sample2_1.fastq.gz \\\n            --in2 test_minigut_sample2_2.fastq.gz \\\n            --out1 test_minigut_sample2_1.trim.fastq.gz \\\n            --out2 test_minigut_sample2_2.trim.fastq.gz \\\n            --json test_minigut_sample2.fastp.json \\\n            --html test_minigut_sample2.fastp.html \\\n             \\\n             \\\n            --thread 1 \\\n            --detect_adapter_for_pe \\\n            -q 15 --cut_front --cut_tail --cut_mean_quality 15 --length_required 15 \\\n            2> test_minigut_sample2.fastp.log\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTP\":\n            fastp: $(fastp --version 2>&1 | sed -e \"s/fastp //g\")\n        END_VERSIONS"
                },
                "parents": [],
                "children": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_R1.fastq.gz",
                        "path": "/nf-core/test-datasets/raw/mag/test_data/",
                        "sizeInBytes": 1599430
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_R2.fastq.gz",
                        "path": "/nf-core/test-datasets/raw/mag/test_data/",
                        "sizeInBytes": 1806457
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_1.trim.fastq.gz",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 1659506
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_2.trim.fastq.gz",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 1857297
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.fastp.json",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 124522
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.fastp.html",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 475979
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.fastp.log",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 1405
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 42
                    }
                ],
                "avgCPU": 88.7,
                "inputFilesBytes": 3405887,
                "outputFilesBytes": 4118751,
                "memoryInBytes": 1169448960,
                "writtenBytes": 4119029,
                "readBytes": 11897551,
                "runtimeInSeconds": 6.0
            },
            {
                "name": "NFCORE_MAG.MAG.FASTQC_RAW",
                "id": "8",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "[ ! -f  test_minigut_sample2_1.fastq.gz ] && ln -s test_minigut_sample2_R1.fastq.gz test_minigut_sample2_1.fastq.gz\n        [ ! -f  test_minigut_sample2_2.fastq.gz ] && ln -s test_minigut_sample2_R2.fastq.gz test_minigut_sample2_2.fastq.gz\n        fastqc --quiet --threads 1 test_minigut_sample2_1.fastq.gz test_minigut_sample2_2.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTQC_RAW\":\n            fastqc: $( fastqc --version | sed -e \"s/FastQC v//g\" )\n        END_VERSIONS"
                },
                "parents": [],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_R1.fastq.gz",
                        "path": "/nf-core/test-datasets/raw/mag/test_data/",
                        "sizeInBytes": 1599430
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_R2.fastq.gz",
                        "path": "/nf-core/test-datasets/raw/mag/test_data/",
                        "sizeInBytes": 1806457
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_1_fastqc.html",
                        "path": "/6f/2f1ecb5353f866c1f6539117e859bd/",
                        "sizeInBytes": 518269
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_2_fastqc.html",
                        "path": "/6f/2f1ecb5353f866c1f6539117e859bd/",
                        "sizeInBytes": 522232
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_1_fastqc.zip",
                        "path": "/6f/2f1ecb5353f866c1f6539117e859bd/",
                        "sizeInBytes": 290235
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_2_fastqc.zip",
                        "path": "/6f/2f1ecb5353f866c1f6539117e859bd/",
                        "sizeInBytes": 288657
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/6f/2f1ecb5353f866c1f6539117e859bd/",
                        "sizeInBytes": 48
                    }
                ],
                "avgCPU": 90.2,
                "inputFilesBytes": 3405887,
                "outputFilesBytes": 1619442,
                "memoryInBytes": 216264704,
                "writtenBytes": 3173505,
                "readBytes": 24927385,
                "runtimeInSeconds": 22.0
            },
            {
                "name": "NFCORE_MAG.MAG.FASTQC_RAW",
                "id": "5",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "[ ! -f  test_minigut_1.fastq.gz ] && ln -s test_minigut_R1.fastq.gz test_minigut_1.fastq.gz\n        [ ! -f  test_minigut_2.fastq.gz ] && ln -s test_minigut_R2.fastq.gz test_minigut_2.fastq.gz\n        fastqc --quiet --threads 1 test_minigut_1.fastq.gz test_minigut_2.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTQC_RAW\":\n            fastqc: $( fastqc --version | sed -e \"s/FastQC v//g\" )\n        END_VERSIONS"
                },
                "parents": [],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_R1.fastq.gz",
                        "path": "/nf-core/test-datasets/raw/mag/test_data/",
                        "sizeInBytes": 3323528
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_R2.fastq.gz",
                        "path": "/nf-core/test-datasets/raw/mag/test_data/",
                        "sizeInBytes": 3398619
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_1_fastqc.html",
                        "path": "/50/450582b8fedacb9adbb8d3bd395bc7/",
                        "sizeInBytes": 617474
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_2_fastqc.html",
                        "path": "/50/450582b8fedacb9adbb8d3bd395bc7/",
                        "sizeInBytes": 611062
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_1_fastqc.zip",
                        "path": "/50/450582b8fedacb9adbb8d3bd395bc7/",
                        "sizeInBytes": 288243
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_2_fastqc.zip",
                        "path": "/50/450582b8fedacb9adbb8d3bd395bc7/",
                        "sizeInBytes": 284771
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/50/450582b8fedacb9adbb8d3bd395bc7/",
                        "sizeInBytes": 48
                    }
                ],
                "avgCPU": 93.7,
                "inputFilesBytes": 6722147,
                "outputFilesBytes": 1801598,
                "memoryInBytes": 288858112,
                "writtenBytes": 3633598,
                "readBytes": 28526247,
                "runtimeInSeconds": 20.0
            },
            {
                "name": "NFCORE_MAG.MAG.FASTP",
                "id": "6",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "[ ! -f  test_minigut_1.fastq.gz ] && ln -s test_minigut_R1.fastq.gz test_minigut_1.fastq.gz\n        [ ! -f  test_minigut_2.fastq.gz ] && ln -s test_minigut_R2.fastq.gz test_minigut_2.fastq.gz\n        fastp \\\n            --in1 test_minigut_1.fastq.gz \\\n            --in2 test_minigut_2.fastq.gz \\\n            --out1 test_minigut_1.trim.fastq.gz \\\n            --out2 test_minigut_2.trim.fastq.gz \\\n            --json test_minigut.fastp.json \\\n            --html test_minigut.fastp.html \\\n             \\\n             \\\n            --thread 1 \\\n            --detect_adapter_for_pe \\\n            -q 15 --cut_front --cut_tail --cut_mean_quality 15 --length_required 15 \\\n            2> test_minigut.fastp.log\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTP\":\n            fastp: $(fastp --version 2>&1 | sed -e \"s/fastp //g\")\n        END_VERSIONS"
                },
                "parents": [],
                "children": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_R1.fastq.gz",
                        "path": "/nf-core/test-datasets/raw/mag/test_data/",
                        "sizeInBytes": 3323528
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_R2.fastq.gz",
                        "path": "/nf-core/test-datasets/raw/mag/test_data/",
                        "sizeInBytes": 3398619
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_1.trim.fastq.gz",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 3406561
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_2.trim.fastq.gz",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 3469254
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.fastp.json",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 112556
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.fastp.html",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 457904
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.fastp.log",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 1347
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 42
                    }
                ],
                "avgCPU": 90.8,
                "inputFilesBytes": 6722147,
                "outputFilesBytes": 7447664,
                "memoryInBytes": 1216315392,
                "writtenBytes": 7447928,
                "readBytes": 23570167,
                "runtimeInSeconds": 9.0
            },
            {
                "name": "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                "id": "9",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "bowtie2 -p 1                 -x bt2_index_base                 -1 \"test_minigut_sample2_1.trim.fastq.gz\" -2 \"test_minigut_sample2_2.trim.fastq.gz\"                                  --un-conc-gz test_minigut_sample2.phix_removed.unmapped_%.fastq.gz                 --al-conc-gz test_minigut_sample2.phix_removed.mapped_%.fastq.gz                 1> /dev/null                 2> test_minigut_sample2.phix_removed.bowtie2.log\n        if [ N = \"Y\" ] ; then\n            gunzip -c test_minigut_sample2.phix_removed.mapped_1.fastq.gz | awk '{if(NR%4==1) print substr($0, 2)}' | LC_ALL=C sort > test_minigut_sample2.phix_removed.mapped_1.read_ids.txt\n            gunzip -c test_minigut_sample2.phix_removed.mapped_2.fastq.gz | awk '{if(NR%4==1) print substr($0, 2)}' | LC_ALL=C sort > test_minigut_sample2.phix_removed.mapped_2.read_ids.txt\n        fi\n        rm -f test_minigut_sample2.phix_removed.mapped_*.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:BOWTIE2_PHIX_REMOVAL_ALIGN\":\n            bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.FASTP",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_BUILD"
                ],
                "children": [
                    "NFCORE_MAG.MAG.FASTQC_TRIMMED",
                    "NFCORE_MAG.MAG.CENTRIFUGE",
                    "NFCORE_MAG.MAG.KRAKEN2",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.FILTLONG",
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADESHYBRID",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_1.trim.fastq.gz",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 1659506
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_2.trim.fastq.gz",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 1857297
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 4196364
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1352
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 17
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1347
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 4196364
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1352
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533274
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725571
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.phix_removed.bowtie2.log",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 589
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 64
                    }
                ],
                "avgCPU": 81.0,
                "inputFilesBytes": 11913599,
                "outputFilesBytes": 3259497,
                "memoryInBytes": 40521728,
                "writtenBytes": 71049273,
                "readBytes": 63248137,
                "runtimeInSeconds": 25.0
            },
            {
                "name": "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                "id": "10",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "bowtie2 -p 1                 -x bt2_index_base                 -1 \"test_minigut_1.trim.fastq.gz\" -2 \"test_minigut_2.trim.fastq.gz\"                                  --un-conc-gz test_minigut.phix_removed.unmapped_%.fastq.gz                 --al-conc-gz test_minigut.phix_removed.mapped_%.fastq.gz                 1> /dev/null                 2> test_minigut.phix_removed.bowtie2.log\n        if [ N = \"Y\" ] ; then\n            gunzip -c test_minigut.phix_removed.mapped_1.fastq.gz | awk '{if(NR%4==1) print substr($0, 2)}' | LC_ALL=C sort > test_minigut.phix_removed.mapped_1.read_ids.txt\n            gunzip -c test_minigut.phix_removed.mapped_2.fastq.gz | awk '{if(NR%4==1) print substr($0, 2)}' | LC_ALL=C sort > test_minigut.phix_removed.mapped_2.read_ids.txt\n        fi\n        rm -f test_minigut.phix_removed.mapped_*.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:BOWTIE2_PHIX_REMOVAL_ALIGN\":\n            bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.FASTP",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_BUILD"
                ],
                "children": [
                    "NFCORE_MAG.MAG.FASTQC_TRIMMED",
                    "NFCORE_MAG.MAG.CENTRIFUGE",
                    "NFCORE_MAG.MAG.KRAKEN2",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.FILTLONG",
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADESHYBRID",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_1.trim.fastq.gz",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 3406561
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_2.trim.fastq.gz",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 3469254
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 4196364
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1352
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 17
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1347
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 4196364
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1352
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170229
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239664
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.phix_removed.bowtie2.log",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 589
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 64
                    }
                ],
                "avgCPU": 86.9,
                "inputFilesBytes": 15272611,
                "outputFilesBytes": 6410546,
                "memoryInBytes": 40042496,
                "writtenBytes": 121406417,
                "readBytes": 101614465,
                "runtimeInSeconds": 45.0
            },
            {
                "name": "NFCORE_MAG.MAG.KRAKEN2",
                "id": "14",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "kraken2         --report-zero-counts         --threads 1         --db database         --report kraken2_report.txt         --paired \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\"         > kraken2.kraken\n    cat kraken2.kraken | cut -f 2,3 > results.krona\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:KRAKEN2\":\n        kraken2: $(echo $(kraken2 --version 2>&1) | sed 's/^.*Kraken version //' | sed 's/ Copyright.*//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                    "NFCORE_MAG.MAG.KRAKEN2_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725571
                    },
                    {
                        "link": "input",
                        "name": "hash.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 3151024
                    },
                    {
                        "link": "input",
                        "name": "opts.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 56
                    },
                    {
                        "link": "input",
                        "name": "taxo.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 469
                    },
                    {
                        "link": "output",
                        "name": "results.krona",
                        "path": "/64/ac465571215560fb4f940988bed32e/",
                        "sizeInBytes": 491562
                    },
                    {
                        "link": "output",
                        "name": "kraken2_report.txt",
                        "path": "/64/ac465571215560fb4f940988bed32e/",
                        "sizeInBytes": 56
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/64/ac465571215560fb4f940988bed32e/",
                        "sizeInBytes": 50
                    }
                ],
                "avgCPU": 55.4,
                "inputFilesBytes": 6410393,
                "outputFilesBytes": 491668,
                "memoryInBytes": 35938304,
                "writtenBytes": 2775191,
                "readBytes": 22237875,
                "runtimeInSeconds": 2.0
            },
            {
                "name": "NFCORE_MAG.MAG.FASTQC_TRIMMED",
                "id": "13",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "[ ! -f  test_minigut_sample2.trimmed_1.fastq.gz ] && ln -s test_minigut_sample2.phix_removed.unmapped_1.fastq.gz test_minigut_sample2.trimmed_1.fastq.gz\n        [ ! -f  test_minigut_sample2.trimmed_2.fastq.gz ] && ln -s test_minigut_sample2.phix_removed.unmapped_2.fastq.gz test_minigut_sample2.trimmed_2.fastq.gz\n        fastqc --quiet --threads 1 test_minigut_sample2.trimmed_1.fastq.gz test_minigut_sample2.trimmed_2.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTQC_TRIMMED\":\n            fastqc: $( fastqc --version | sed -e \"s/FastQC v//g\" )\n        END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725571
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.trimmed_1_fastqc.html",
                        "path": "/76/d4869464a5074828810a263f222c16/",
                        "sizeInBytes": 537305
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.trimmed_2_fastqc.html",
                        "path": "/76/d4869464a5074828810a263f222c16/",
                        "sizeInBytes": 533381
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.trimmed_1_fastqc.zip",
                        "path": "/76/d4869464a5074828810a263f222c16/",
                        "sizeInBytes": 284126
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.trimmed_2_fastqc.zip",
                        "path": "/76/d4869464a5074828810a263f222c16/",
                        "sizeInBytes": 280611
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/76/d4869464a5074828810a263f222c16/",
                        "sizeInBytes": 52
                    }
                ],
                "avgCPU": 90.3,
                "inputFilesBytes": 3258845,
                "outputFilesBytes": 1635474,
                "memoryInBytes": 275935232,
                "writtenBytes": 3230841,
                "readBytes": 24824794,
                "runtimeInSeconds": 21.0
            },
            {
                "name": "NFCORE_MAG.MAG.CENTRIFUGE",
                "id": "12",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "centrifuge -x \"minigut_cf\"         -p 1         --report-file report.txt         -S results.txt         -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\"\n    centrifuge-kreport -x \"minigut_cf\" results.txt > kreport.txt\n    cat results.txt | cut -f 1,3 > results.krona\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:CENTRIFUGE\":\n        centrifuge: $(centrifuge --version | sed -n 1p | sed 's/^.*centrifuge-class version //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                    "NFCORE_MAG.MAG.CENTRIFUGE_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725571
                    },
                    {
                        "link": "input",
                        "name": "minigut_cf.1.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 8972492
                    },
                    {
                        "link": "input",
                        "name": "minigut_cf.2.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 218756
                    },
                    {
                        "link": "input",
                        "name": "minigut_cf.3.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 76
                    },
                    {
                        "link": "input",
                        "name": "minigut_cf.4.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 36
                    },
                    {
                        "link": "output",
                        "name": "results.krona",
                        "path": "/33/6b3a353b633c73ead2741ef5975521/",
                        "sizeInBytes": 491575
                    },
                    {
                        "link": "output",
                        "name": "report.txt",
                        "path": "/33/6b3a353b633c73ead2741ef5975521/",
                        "sizeInBytes": 64
                    },
                    {
                        "link": "output",
                        "name": "kreport.txt",
                        "path": "/33/6b3a353b633c73ead2741ef5975521/",
                        "sizeInBytes": 36
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/33/6b3a353b633c73ead2741ef5975521/",
                        "sizeInBytes": 51
                    }
                ],
                "avgCPU": 54.3,
                "inputFilesBytes": 12450204,
                "outputFilesBytes": 491726,
                "memoryInBytes": 39555072,
                "writtenBytes": 2731364,
                "readBytes": 31009014,
                "runtimeInSeconds": 4.0
            },
            {
                "name": "NFCORE_MAG.MAG.SPADES",
                "id": "11",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "metaspades.py                          --threads \"1\"             --memory 6             --pe1-1 test_minigut_sample2.phix_removed.unmapped_1.fastq.gz             --pe1-2 test_minigut_sample2.phix_removed.unmapped_2.fastq.gz             -o spades\n        mv spades/assembly_graph_with_scaffolds.gfa SPAdes-test_minigut_sample2_graph.gfa\n        mv spades/scaffolds.fasta SPAdes-test_minigut_sample2_scaffolds.fasta\n        mv spades/contigs.fasta SPAdes-test_minigut_sample2_contigs.fasta\n        mv spades/spades.log SPAdes-test_minigut_sample2.log\n        gzip \"SPAdes-test_minigut_sample2_contigs.fasta\"\n        gzip \"SPAdes-test_minigut_sample2_graph.gfa\"\n        gzip -c \"SPAdes-test_minigut_sample2_scaffolds.fasta\" > \"SPAdes-test_minigut_sample2_scaffolds.fasta.gz\"\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:SPADES\":\n            python: $(python --version 2>&1 | sed 's/Python //g')\n            metaspades: $(metaspades.py --version | sed \"s/SPAdes genome assembler v//; s/ \\[.*//\")\n        END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST",
                    "NFCORE_MAG.MAG.PRODIGAL",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725571
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 2133044
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2.log",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 123533
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2_contigs.fasta.gz",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 653791
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta.gz",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 653336
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2_graph.gfa.gz",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 685577
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 66
                    }
                ],
                "avgCPU": 93.2,
                "inputFilesBytes": 3258845,
                "outputFilesBytes": 4249347,
                "memoryInBytes": 157962240,
                "writtenBytes": 601348224,
                "readBytes": 121905258,
                "runtimeInSeconds": 86.0
            },
            {
                "name": "NFCORE_MAG.MAG.MEGAHIT",
                "id": "15",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "megahit  -t \"1\" -m 6442450944 -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\" -o MEGAHIT --out-prefix \"MEGAHIT-test_minigut_sample2\"\n        gzip -c \"MEGAHIT/MEGAHIT-test_minigut_sample2.contigs.fa\" > \"MEGAHIT/MEGAHIT-test_minigut_sample2.contigs.fa.gz\"\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:MEGAHIT\":\n            megahit: $(echo $(megahit -v 2>&1) | sed 's/MEGAHIT v//')\n        END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST",
                    "NFCORE_MAG.MAG.PRODIGAL",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725571
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/a492871941f9de2ee62bab563f685e/MEGAHIT/",
                        "sizeInBytes": 681245
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2.log",
                        "path": "/a492871941f9de2ee62bab563f685e/MEGAHIT/",
                        "sizeInBytes": 131685
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa.gz",
                        "path": "/a492871941f9de2ee62bab563f685e/MEGAHIT/",
                        "sizeInBytes": 198503
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/83/a492871941f9de2ee62bab563f685e/",
                        "sizeInBytes": 45
                    }
                ],
                "avgCPU": 95.5,
                "inputFilesBytes": 3258845,
                "outputFilesBytes": 1011478,
                "memoryInBytes": 323170304,
                "writtenBytes": 87885657,
                "readBytes": 649154642,
                "runtimeInSeconds": 98.0
            },
            {
                "name": "NFCORE_MAG.MAG.CENTRIFUGE",
                "id": "17",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "centrifuge -x \"minigut_cf\"         -p 1         --report-file report.txt         -S results.txt         -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\"\n    centrifuge-kreport -x \"minigut_cf\" results.txt > kreport.txt\n    cat results.txt | cut -f 1,3 > results.krona\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:CENTRIFUGE\":\n        centrifuge: $(centrifuge --version | sed -n 1p | sed 's/^.*centrifuge-class version //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                    "NFCORE_MAG.MAG.CENTRIFUGE_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239664
                    },
                    {
                        "link": "input",
                        "name": "minigut_cf.1.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 8972492
                    },
                    {
                        "link": "input",
                        "name": "minigut_cf.2.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 218756
                    },
                    {
                        "link": "input",
                        "name": "minigut_cf.3.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 76
                    },
                    {
                        "link": "input",
                        "name": "minigut_cf.4.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 36
                    },
                    {
                        "link": "output",
                        "name": "results.krona",
                        "path": "/1c/1e5e8125d64e1dd5306b85c6967d69/",
                        "sizeInBytes": 951947
                    },
                    {
                        "link": "output",
                        "name": "report.txt",
                        "path": "/1c/1e5e8125d64e1dd5306b85c6967d69/",
                        "sizeInBytes": 64
                    },
                    {
                        "link": "output",
                        "name": "kreport.txt",
                        "path": "/1c/1e5e8125d64e1dd5306b85c6967d69/",
                        "sizeInBytes": 36
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/1c/1e5e8125d64e1dd5306b85c6967d69/",
                        "sizeInBytes": 51
                    }
                ],
                "avgCPU": 67.5,
                "inputFilesBytes": 15601252,
                "outputFilesBytes": 952098,
                "memoryInBytes": 39743488,
                "writtenBytes": 5848868,
                "readBytes": 46175709,
                "runtimeInSeconds": 7.0
            },
            {
                "name": "NFCORE_MAG.MAG.SPADES",
                "id": "19",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "metaspades.py                          --threads \"1\"             --memory 6             --pe1-1 test_minigut.phix_removed.unmapped_1.fastq.gz             --pe1-2 test_minigut.phix_removed.unmapped_2.fastq.gz             -o spades\n        mv spades/assembly_graph_with_scaffolds.gfa SPAdes-test_minigut_graph.gfa\n        mv spades/scaffolds.fasta SPAdes-test_minigut_scaffolds.fasta\n        mv spades/contigs.fasta SPAdes-test_minigut_contigs.fasta\n        mv spades/spades.log SPAdes-test_minigut.log\n        gzip \"SPAdes-test_minigut_contigs.fasta\"\n        gzip \"SPAdes-test_minigut_graph.gfa\"\n        gzip -c \"SPAdes-test_minigut_scaffolds.fasta\" > \"SPAdes-test_minigut_scaffolds.fasta.gz\"\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:SPADES\":\n            python: $(python --version 2>&1 | sed 's/Python //g')\n            metaspades: $(metaspades.py --version | sed \"s/SPAdes genome assembler v//; s/ \\[.*//\")\n        END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST",
                    "NFCORE_MAG.MAG.PRODIGAL",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239664
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 1772115
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut.log",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 121585
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_contigs.fasta.gz",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 547458
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_scaffolds.fasta.gz",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 545217
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_graph.gfa.gz",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 518118
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 66
                    }
                ],
                "avgCPU": 95.8,
                "inputFilesBytes": 6409893,
                "outputFilesBytes": 3504558,
                "memoryInBytes": 206938112,
                "writtenBytes": 537789105,
                "readBytes": 221623996,
                "runtimeInSeconds": 114.0
            },
            {
                "name": "NFCORE_MAG.MAG.KRAKEN2",
                "id": "18",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "kraken2         --report-zero-counts         --threads 1         --db database         --report kraken2_report.txt         --paired \"test_minigut.phix_removed.unmapped_1.fastq.gz\" \"test_minigut.phix_removed.unmapped_2.fastq.gz\"         > kraken2.kraken\n    cat kraken2.kraken | cut -f 2,3 > results.krona\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:KRAKEN2\":\n        kraken2: $(echo $(kraken2 --version 2>&1) | sed 's/^.*Kraken version //' | sed 's/ Copyright.*//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                    "NFCORE_MAG.MAG.KRAKEN2_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239664
                    },
                    {
                        "link": "input",
                        "name": "hash.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 3151024
                    },
                    {
                        "link": "input",
                        "name": "opts.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 56
                    },
                    {
                        "link": "input",
                        "name": "taxo.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 469
                    },
                    {
                        "link": "output",
                        "name": "results.krona",
                        "path": "/9e/be323b74a69fcf33b7f7a228009a3a/",
                        "sizeInBytes": 951934
                    },
                    {
                        "link": "output",
                        "name": "kraken2_report.txt",
                        "path": "/9e/be323b74a69fcf33b7f7a228009a3a/",
                        "sizeInBytes": 56
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/9e/be323b74a69fcf33b7f7a228009a3a/",
                        "sizeInBytes": 50
                    }
                ],
                "avgCPU": 59.5,
                "inputFilesBytes": 9561442,
                "outputFilesBytes": 952040,
                "memoryInBytes": 34766848,
                "writtenBytes": 5247457,
                "readBytes": 35430762,
                "runtimeInSeconds": 3.0
            },
            {
                "name": "NFCORE_MAG.MAG.FASTQC_TRIMMED",
                "id": "16",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "[ ! -f  test_minigut.trimmed_1.fastq.gz ] && ln -s test_minigut.phix_removed.unmapped_1.fastq.gz test_minigut.trimmed_1.fastq.gz\n        [ ! -f  test_minigut.trimmed_2.fastq.gz ] && ln -s test_minigut.phix_removed.unmapped_2.fastq.gz test_minigut.trimmed_2.fastq.gz\n        fastqc --quiet --threads 1 test_minigut.trimmed_1.fastq.gz test_minigut.trimmed_2.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTQC_TRIMMED\":\n            fastqc: $( fastqc --version | sed -e \"s/FastQC v//g\" )\n        END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239664
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.trimmed_1_fastqc.html",
                        "path": "/8b/951f59ff6eff428229c9d8deeb003f/",
                        "sizeInBytes": 651238
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.trimmed_2_fastqc.html",
                        "path": "/8b/951f59ff6eff428229c9d8deeb003f/",
                        "sizeInBytes": 647910
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.trimmed_1_fastqc.zip",
                        "path": "/8b/951f59ff6eff428229c9d8deeb003f/",
                        "sizeInBytes": 287336
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.trimmed_2_fastqc.zip",
                        "path": "/8b/951f59ff6eff428229c9d8deeb003f/",
                        "sizeInBytes": 289084
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/8b/951f59ff6eff428229c9d8deeb003f/",
                        "sizeInBytes": 52
                    }
                ],
                "avgCPU": 90.9,
                "inputFilesBytes": 6409893,
                "outputFilesBytes": 1875620,
                "memoryInBytes": 343523328,
                "writtenBytes": 3813370,
                "readBytes": 28319619,
                "runtimeInSeconds": 23.0
            },
            {
                "name": "NFCORE_MAG.MAG.MEGAHIT",
                "id": "20",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "megahit  -t \"1\" -m 6442450944 -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\" -o MEGAHIT --out-prefix \"MEGAHIT-test_minigut\"\n        gzip -c \"MEGAHIT/MEGAHIT-test_minigut.contigs.fa\" > \"MEGAHIT/MEGAHIT-test_minigut.contigs.fa.gz\"\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:MEGAHIT\":\n            megahit: $(echo $(megahit -v 2>&1) | sed 's/MEGAHIT v//')\n        END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST",
                    "NFCORE_MAG.MAG.PRODIGAL",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239664
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/",
                        "sizeInBytes": 1749885
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut.log",
                        "path": "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/",
                        "sizeInBytes": 130295
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut.contigs.fa.gz",
                        "path": "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/",
                        "sizeInBytes": 511173
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/c2/101a0fb9edf105a9bbbaa4215ca2b5/",
                        "sizeInBytes": 45
                    }
                ],
                "avgCPU": 96.6,
                "inputFilesBytes": 6409893,
                "outputFilesBytes": 2391399,
                "memoryInBytes": 55246848,
                "writtenBytes": 141363273,
                "readBytes": 734951284,
                "runtimeInSeconds": 139.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                "id": "22",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "mkdir bowtie\n    bowtie2-build --threads 1 SPAdes-test_minigut_sample2_scaffolds.fasta \"bt2_index_base\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_BUILD\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 2133044
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 2133044
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 5085180
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470452
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 49589
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470447
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 5085180
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470452
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 80
                    }
                ],
                "avgCPU": 74.4,
                "inputFilesBytes": 2133044,
                "outputFilesBytes": 13764424,
                "memoryInBytes": 41099264,
                "writtenBytes": 11641365,
                "readBytes": 9949727,
                "runtimeInSeconds": 3.0
            },
            {
                "name": "NFCORE_MAG.MAG.PRODIGAL",
                "id": "21",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "pigz -cdf SPAdes-test_minigut_sample2_scaffolds.fasta | prodigal \\\n        -p meta \\\n        -f gff \\\n        -d \"test_minigut_sample2.fna\" \\\n        -o \"test_minigut_sample2.gff\" \\\n        -a \"test_minigut_sample2.faa\" \\\n        -s \"test_minigut_sample2_all.txt\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PRODIGAL\":\n        prodigal: $(prodigal -v 2>&1 | sed -n 's/Prodigal V\\(.*\\):.*/\\1/p')\n        pigz: $(pigz -V 2>&1 | sed 's/pigz //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 2133044
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.gff",
                        "path": "/9e/34f9fa9af0d2520ba072bb7e5902dc/",
                        "sizeInBytes": 2609126
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.fna",
                        "path": "/9e/34f9fa9af0d2520ba072bb7e5902dc/",
                        "sizeInBytes": 2467069
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.faa",
                        "path": "/9e/34f9fa9af0d2520ba072bb7e5902dc/",
                        "sizeInBytes": 1357941
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_all.txt",
                        "path": "/9e/34f9fa9af0d2520ba072bb7e5902dc/",
                        "sizeInBytes": 5633865
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/9e/34f9fa9af0d2520ba072bb7e5902dc/",
                        "sizeInBytes": 61
                    }
                ],
                "avgCPU": 86.7,
                "inputFilesBytes": 2133044,
                "outputFilesBytes": 12068062,
                "memoryInBytes": 55660544,
                "writtenBytes": 14456537,
                "readBytes": 4342188,
                "runtimeInSeconds": 11.0
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST",
                "id": "23",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "metaquast.py --threads \"1\" --rna-finding --max-ref-number 0 -l \"SPAdes-test_minigut_sample2\" \"SPAdes-test_minigut_sample2_scaffolds.fasta\" -o \"QUAST\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 2133044
                    },
                    {
                        "link": "output",
                        "name": "basic_stats",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 92290
                    },
                    {
                        "link": "output",
                        "name": "icarus.html",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 53372
                    },
                    {
                        "link": "output",
                        "name": "icarus_viewers",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 833150
                    },
                    {
                        "link": "output",
                        "name": "metaquast.log",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 730
                    },
                    {
                        "link": "output",
                        "name": "predicted_genes",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 334
                    },
                    {
                        "link": "output",
                        "name": "quast.log",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 3941
                    },
                    {
                        "link": "output",
                        "name": "report.html",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 393153
                    },
                    {
                        "link": "output",
                        "name": "report.pdf",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 33778
                    },
                    {
                        "link": "output",
                        "name": "report.tex",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 1229
                    },
                    {
                        "link": "output",
                        "name": "report.tsv",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 534
                    },
                    {
                        "link": "output",
                        "name": "report.txt",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 1447
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.tex",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 1062
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.tsv",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 534
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.txt",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 1051
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/cc/0141a35dc4cfe921c2795e8375987c/",
                        "sizeInBytes": 63
                    }
                ],
                "avgCPU": 58.6,
                "inputFilesBytes": 2133044,
                "outputFilesBytes": 1416668,
                "memoryInBytes": 297996288,
                "writtenBytes": 5171191,
                "readBytes": 128685719,
                "runtimeInSeconds": 14.417
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST",
                "id": "26",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "metaquast.py --threads \"1\" --rna-finding --max-ref-number 0 -l \"MEGAHIT-test_minigut_sample2\" \"MEGAHIT-test_minigut_sample2.contigs.fa\" -o \"QUAST\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/a492871941f9de2ee62bab563f685e/MEGAHIT/",
                        "sizeInBytes": 681245
                    },
                    {
                        "link": "output",
                        "name": "basic_stats",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 61148
                    },
                    {
                        "link": "output",
                        "name": "icarus.html",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 53373
                    },
                    {
                        "link": "output",
                        "name": "icarus_viewers",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 802216
                    },
                    {
                        "link": "output",
                        "name": "metaquast.log",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 724
                    },
                    {
                        "link": "output",
                        "name": "predicted_genes",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 262
                    },
                    {
                        "link": "output",
                        "name": "quast.log",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 3572
                    },
                    {
                        "link": "output",
                        "name": "report.html",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 382977
                    },
                    {
                        "link": "output",
                        "name": "report.pdf",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 28437
                    },
                    {
                        "link": "output",
                        "name": "report.tex",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 1223
                    },
                    {
                        "link": "output",
                        "name": "report.tsv",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 528
                    },
                    {
                        "link": "output",
                        "name": "report.txt",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 1470
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.tex",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 1056
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.tsv",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 528
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.txt",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 1053
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/df/f3bde70ef3b153d702923d488c467a/",
                        "sizeInBytes": 63
                    }
                ],
                "avgCPU": 86.4,
                "inputFilesBytes": 681245,
                "outputFilesBytes": 1338630,
                "memoryInBytes": 293314560,
                "writtenBytes": 4679327,
                "readBytes": 95359662,
                "runtimeInSeconds": 7.271
            },
            {
                "name": "NFCORE_MAG.MAG.PRODIGAL",
                "id": "25",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "pigz -cdf MEGAHIT-test_minigut_sample2.contigs.fa | prodigal \\\n        -p meta \\\n        -f gff \\\n        -d \"test_minigut_sample2.fna\" \\\n        -o \"test_minigut_sample2.gff\" \\\n        -a \"test_minigut_sample2.faa\" \\\n        -s \"test_minigut_sample2_all.txt\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PRODIGAL\":\n        prodigal: $(prodigal -v 2>&1 | sed -n 's/Prodigal V\\(.*\\):.*/\\1/p')\n        pigz: $(pigz -V 2>&1 | sed 's/pigz //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/a492871941f9de2ee62bab563f685e/MEGAHIT/",
                        "sizeInBytes": 681245
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.gff",
                        "path": "/fe/428751a5e94188b50f851df1687601/",
                        "sizeInBytes": 655029
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.fna",
                        "path": "/fe/428751a5e94188b50f851df1687601/",
                        "sizeInBytes": 738702
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.faa",
                        "path": "/fe/428751a5e94188b50f851df1687601/",
                        "sizeInBytes": 367506
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_all.txt",
                        "path": "/fe/428751a5e94188b50f851df1687601/",
                        "sizeInBytes": 1751650
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/fe/428751a5e94188b50f851df1687601/",
                        "sizeInBytes": 61
                    }
                ],
                "avgCPU": 87.5,
                "inputFilesBytes": 681245,
                "outputFilesBytes": 3512948,
                "memoryInBytes": 55271424,
                "writtenBytes": 4258078,
                "readBytes": 1438572,
                "runtimeInSeconds": 4.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                "id": "24",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "mkdir bowtie\n    bowtie2-build --threads 1 MEGAHIT-test_minigut_sample2.contigs.fa \"bt2_index_base\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_BUILD\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/a492871941f9de2ee62bab563f685e/MEGAHIT/",
                        "sizeInBytes": 681245
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 681245
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 4474209
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157464
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 11816
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157460
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 4474209
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157464
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 80
                    }
                ],
                "avgCPU": 84.1,
                "inputFilesBytes": 681245,
                "outputFilesBytes": 10113946,
                "memoryInBytes": 28553216,
                "writtenBytes": 9442659,
                "readBytes": 4142520,
                "runtimeInSeconds": 1.0
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST",
                "id": "27",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "metaquast.py --threads \"1\" --rna-finding --max-ref-number 0 -l \"SPAdes-test_minigut\" \"SPAdes-test_minigut_scaffolds.fasta\" -o \"QUAST\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 1772115
                    },
                    {
                        "link": "output",
                        "name": "basic_stats",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 87922
                    },
                    {
                        "link": "output",
                        "name": "icarus.html",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 53364
                    },
                    {
                        "link": "output",
                        "name": "icarus_viewers",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 783442
                    },
                    {
                        "link": "output",
                        "name": "metaquast.log",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 698
                    },
                    {
                        "link": "output",
                        "name": "predicted_genes",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 347
                    },
                    {
                        "link": "output",
                        "name": "quast.log",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 3837
                    },
                    {
                        "link": "output",
                        "name": "report.html",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 372013
                    },
                    {
                        "link": "output",
                        "name": "report.pdf",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 31492
                    },
                    {
                        "link": "output",
                        "name": "report.tex",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 1243
                    },
                    {
                        "link": "output",
                        "name": "report.tsv",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 549
                    },
                    {
                        "link": "output",
                        "name": "report.txt",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 1263
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.tex",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 1076
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.tsv",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 549
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.txt",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 1043
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/72/12f50d9fab75af67b6d58104068945/",
                        "sizeInBytes": 63
                    }
                ],
                "avgCPU": 86.1,
                "inputFilesBytes": 1772115,
                "outputFilesBytes": 1338900,
                "memoryInBytes": 94191616,
                "writtenBytes": 6101490,
                "readBytes": 130712713,
                "runtimeInSeconds": 10.862
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                "id": "29",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "mkdir bowtie\n    bowtie2-build --threads 1 SPAdes-test_minigut_scaffolds.fasta \"bt2_index_base\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_BUILD\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 1772115
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 1772115
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 4779149
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434680
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 1808
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434676
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 4779149
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434680
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 80
                    }
                ],
                "avgCPU": 91.2,
                "inputFilesBytes": 1772115,
                "outputFilesBytes": 12636337,
                "memoryInBytes": 34422784,
                "writtenBytes": 10874197,
                "readBytes": 8505993,
                "runtimeInSeconds": 2.0
            },
            {
                "name": "NFCORE_MAG.MAG.PRODIGAL",
                "id": "28",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "pigz -cdf SPAdes-test_minigut_scaffolds.fasta | prodigal \\\n        -p meta \\\n        -f gff \\\n        -d \"test_minigut.fna\" \\\n        -o \"test_minigut.gff\" \\\n        -a \"test_minigut.faa\" \\\n        -s \"test_minigut_all.txt\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PRODIGAL\":\n        prodigal: $(prodigal -v 2>&1 | sed -n 's/Prodigal V\\(.*\\):.*/\\1/p')\n        pigz: $(pigz -V 2>&1 | sed 's/pigz //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 1772115
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.gff",
                        "path": "/e5/ae2196ddf7e7a335e47496cee0bf8d/",
                        "sizeInBytes": 404533
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.fna",
                        "path": "/e5/ae2196ddf7e7a335e47496cee0bf8d/",
                        "sizeInBytes": 1793076
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.faa",
                        "path": "/e5/ae2196ddf7e7a335e47496cee0bf8d/",
                        "sizeInBytes": 749527
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_all.txt",
                        "path": "/e5/ae2196ddf7e7a335e47496cee0bf8d/",
                        "sizeInBytes": 5199012
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/e5/ae2196ddf7e7a335e47496cee0bf8d/",
                        "sizeInBytes": 61
                    }
                ],
                "avgCPU": 94.5,
                "inputFilesBytes": 1772115,
                "outputFilesBytes": 8146208,
                "memoryInBytes": 65024000,
                "writtenBytes": 9922522,
                "readBytes": 3620277,
                "runtimeInSeconds": 35.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                "id": "32",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "mkdir bowtie\n    bowtie2-build --threads 1 MEGAHIT-test_minigut.contigs.fa \"bt2_index_base\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_BUILD\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/",
                        "sizeInBytes": 1749885
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 1749885
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 4788734
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434788
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 2456
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434780
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 4788734
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434788
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 80
                    }
                ],
                "avgCPU": 89.0,
                "inputFilesBytes": 1749885,
                "outputFilesBytes": 12634245,
                "memoryInBytes": 36511744,
                "writtenBytes": 10894333,
                "readBytes": 8417065,
                "runtimeInSeconds": 2.0
            },
            {
                "name": "NFCORE_MAG.MAG.PRODIGAL",
                "id": "30",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "pigz -cdf MEGAHIT-test_minigut.contigs.fa | prodigal \\\n        -p meta \\\n        -f gff \\\n        -d \"test_minigut.fna\" \\\n        -o \"test_minigut.gff\" \\\n        -a \"test_minigut.faa\" \\\n        -s \"test_minigut_all.txt\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PRODIGAL\":\n        prodigal: $(prodigal -v 2>&1 | sed -n 's/Prodigal V\\(.*\\):.*/\\1/p')\n        pigz: $(pigz -V 2>&1 | sed 's/pigz //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/",
                        "sizeInBytes": 1749885
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.gff",
                        "path": "/3f/b0c9416faa2c6d3b038c04a767bbce/",
                        "sizeInBytes": 435322
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.fna",
                        "path": "/3f/b0c9416faa2c6d3b038c04a767bbce/",
                        "sizeInBytes": 1764596
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.faa",
                        "path": "/3f/b0c9416faa2c6d3b038c04a767bbce/",
                        "sizeInBytes": 720125
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_all.txt",
                        "path": "/3f/b0c9416faa2c6d3b038c04a767bbce/",
                        "sizeInBytes": 5117265
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/3f/b0c9416faa2c6d3b038c04a767bbce/",
                        "sizeInBytes": 61
                    }
                ],
                "avgCPU": 93.8,
                "inputFilesBytes": 1749885,
                "outputFilesBytes": 8037369,
                "memoryInBytes": 56995840,
                "writtenBytes": 9801136,
                "readBytes": 3575814,
                "runtimeInSeconds": 27.0
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST",
                "id": "31",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "metaquast.py --threads \"1\" --rna-finding --max-ref-number 0 -l \"MEGAHIT-test_minigut\" \"MEGAHIT-test_minigut.contigs.fa\" -o \"QUAST\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/",
                        "sizeInBytes": 1749885
                    },
                    {
                        "link": "output",
                        "name": "basic_stats",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 57895
                    },
                    {
                        "link": "output",
                        "name": "icarus.html",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 53365
                    },
                    {
                        "link": "output",
                        "name": "icarus_viewers",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 794220
                    },
                    {
                        "link": "output",
                        "name": "metaquast.log",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 692
                    },
                    {
                        "link": "output",
                        "name": "predicted_genes",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 266
                    },
                    {
                        "link": "output",
                        "name": "quast.log",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 3486
                    },
                    {
                        "link": "output",
                        "name": "report.html",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 382475
                    },
                    {
                        "link": "output",
                        "name": "report.pdf",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 28688
                    },
                    {
                        "link": "output",
                        "name": "report.tex",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 1241
                    },
                    {
                        "link": "output",
                        "name": "report.tsv",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 547
                    },
                    {
                        "link": "output",
                        "name": "report.txt",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 1286
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.tex",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 1074
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.tsv",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 547
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.txt",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 1043
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/b7/970e9d834edce57f29423a99aac816/",
                        "sizeInBytes": 63
                    }
                ],
                "avgCPU": 83.7,
                "inputFilesBytes": 1749885,
                "outputFilesBytes": 1326888,
                "memoryInBytes": 294641664,
                "writtenBytes": 6133055,
                "readBytes": 107529805,
                "runtimeInSeconds": 10.067
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                "id": "34",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"SPAdes-test_minigut_sample2-test_minigut.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"SPAdes-test_minigut_sample2-test_minigut.bam\"\n    samtools index \"SPAdes-test_minigut_sample2-test_minigut.bam\"\n\n    if [ SPAdes-test_minigut_sample2-test_minigut = \"SPAdes-test_minigut_sample2-test_minigut_sample2\" ] ; then\n        mv \"SPAdes-test_minigut_sample2-test_minigut.bowtie2.log\" \"SPAdes-test_minigut_sample2.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 2133044
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 5085180
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470452
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 49589
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470447
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 5085180
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470452
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239664
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/e5/0b51f7ab520a9b0717d009ec567a92/",
                        "sizeInBytes": 2133044
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2-test_minigut.bam",
                        "path": "/e5/0b51f7ab520a9b0717d009ec567a92/",
                        "sizeInBytes": 7011332
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2-test_minigut.bam.bai",
                        "path": "/e5/0b51f7ab520a9b0717d009ec567a92/",
                        "sizeInBytes": 42120
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2-test_minigut.bowtie2.log",
                        "path": "/e5/0b51f7ab520a9b0717d009ec567a92/",
                        "sizeInBytes": 590
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/e5/0b51f7ab520a9b0717d009ec567a92/",
                        "sizeInBytes": 116
                    }
                ],
                "avgCPU": 78.0,
                "inputFilesBytes": 20174237,
                "outputFilesBytes": 9187202,
                "memoryInBytes": 75362304,
                "writtenBytes": 43891634,
                "readBytes": 62523471,
                "runtimeInSeconds": 8.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                "id": "33",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"SPAdes-test_minigut_sample2-test_minigut_sample2.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"SPAdes-test_minigut_sample2-test_minigut_sample2.bam\"\n    samtools index \"SPAdes-test_minigut_sample2-test_minigut_sample2.bam\"\n\n    if [ SPAdes-test_minigut_sample2-test_minigut_sample2 = \"SPAdes-test_minigut_sample2-test_minigut_sample2\" ] ; then\n        mv \"SPAdes-test_minigut_sample2-test_minigut_sample2.bowtie2.log\" \"SPAdes-test_minigut_sample2.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 2133044
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 5085180
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470452
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 49589
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470447
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 5085180
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470452
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725571
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 2133044
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2-test_minigut_sample2.bam",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 3820454
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2-test_minigut_sample2.bam.bai",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 416808
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2.bowtie2.log",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 600
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 116
                    }
                ],
                "avgCPU": 84.1,
                "inputFilesBytes": 17023189,
                "outputFilesBytes": 6371022,
                "memoryInBytes": 65974272,
                "writtenBytes": 28899426,
                "readBytes": 44007976,
                "runtimeInSeconds": 13.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                "id": "35",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"MEGAHIT-test_minigut_sample2-test_minigut_sample2.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam\"\n    samtools index \"MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam\"\n\n    if [ MEGAHIT-test_minigut_sample2-test_minigut_sample2 = \"MEGAHIT-test_minigut_sample2-test_minigut_sample2\" ] ; then\n        mv \"MEGAHIT-test_minigut_sample2-test_minigut_sample2.bowtie2.log\" \"MEGAHIT-test_minigut_sample2.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 681245
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 4474209
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157464
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 11816
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157460
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 4474209
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157464
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725571
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/d3/c332ef8efac5a782924ca4114ed8cd/",
                        "sizeInBytes": 681245
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam",
                        "path": "/d3/c332ef8efac5a782924ca4114ed8cd/",
                        "sizeInBytes": 3608114
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam.bai",
                        "path": "/d3/c332ef8efac5a782924ca4114ed8cd/",
                        "sizeInBytes": 104976
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2.bowtie2.log",
                        "path": "/d3/c332ef8efac5a782924ca4114ed8cd/",
                        "sizeInBytes": 599
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/d3/c332ef8efac5a782924ca4114ed8cd/",
                        "sizeInBytes": 116
                    }
                ],
                "avgCPU": 82.2,
                "inputFilesBytes": 13372711,
                "outputFilesBytes": 4395050,
                "memoryInBytes": 59961344,
                "writtenBytes": 25720419,
                "readBytes": 39144327,
                "runtimeInSeconds": 8.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                "id": "36",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"MEGAHIT-test_minigut_sample2-test_minigut.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"MEGAHIT-test_minigut_sample2-test_minigut.bam\"\n    samtools index \"MEGAHIT-test_minigut_sample2-test_minigut.bam\"\n\n    if [ MEGAHIT-test_minigut_sample2-test_minigut = \"MEGAHIT-test_minigut_sample2-test_minigut_sample2\" ] ; then\n        mv \"MEGAHIT-test_minigut_sample2-test_minigut.bowtie2.log\" \"MEGAHIT-test_minigut_sample2.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 681245
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 4474209
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157464
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 11816
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157460
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 4474209
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157464
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239664
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 681245
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut.bam",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 6956328
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut.bam.bai",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 10584
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut.bowtie2.log",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 590
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 116
                    }
                ],
                "avgCPU": 83.0,
                "inputFilesBytes": 16523759,
                "outputFilesBytes": 7648863,
                "memoryInBytes": 68321280,
                "writtenBytes": 43518433,
                "readBytes": 60185325,
                "runtimeInSeconds": 7.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                "id": "37",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"SPAdes-test_minigut-test_minigut_sample2.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"SPAdes-test_minigut-test_minigut_sample2.bam\"\n    samtools index \"SPAdes-test_minigut-test_minigut_sample2.bam\"\n\n    if [ SPAdes-test_minigut-test_minigut_sample2 = \"SPAdes-test_minigut-test_minigut\" ] ; then\n        mv \"SPAdes-test_minigut-test_minigut_sample2.bowtie2.log\" \"SPAdes-test_minigut.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 1772115
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 4779149
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434680
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 1808
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434676
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 4779149
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434680
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725571
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/b3/84346a33369d5dc4712e03db3b5e82/",
                        "sizeInBytes": 1772115
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut-test_minigut_sample2.bam",
                        "path": "/b3/84346a33369d5dc4712e03db3b5e82/",
                        "sizeInBytes": 3547190
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut-test_minigut_sample2.bam.bai",
                        "path": "/b3/84346a33369d5dc4712e03db3b5e82/",
                        "sizeInBytes": 3648
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut-test_minigut_sample2.bowtie2.log",
                        "path": "/b3/84346a33369d5dc4712e03db3b5e82/",
                        "sizeInBytes": 590
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/b3/84346a33369d5dc4712e03db3b5e82/",
                        "sizeInBytes": 116
                    }
                ],
                "avgCPU": 82.9,
                "inputFilesBytes": 15895102,
                "outputFilesBytes": 5323659,
                "memoryInBytes": 57696256,
                "writtenBytes": 24493251,
                "readBytes": 39124844,
                "runtimeInSeconds": 4.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                "id": "38",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"SPAdes-test_minigut-test_minigut.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"SPAdes-test_minigut-test_minigut.bam\"\n    samtools index \"SPAdes-test_minigut-test_minigut.bam\"\n\n    if [ SPAdes-test_minigut-test_minigut = \"SPAdes-test_minigut-test_minigut\" ] ; then\n        mv \"SPAdes-test_minigut-test_minigut.bowtie2.log\" \"SPAdes-test_minigut.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 1772115
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 4779149
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434680
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 1808
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434676
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 4779149
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434680
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239664
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 1772115
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut-test_minigut.bam",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 6021434
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut-test_minigut.bam.bai",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 7576
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut.bowtie2.log",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 599
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 116
                    }
                ],
                "avgCPU": 90.6,
                "inputFilesBytes": 19046150,
                "outputFilesBytes": 7801840,
                "memoryInBytes": 76587008,
                "writtenBytes": 55001997,
                "readBytes": 72782864,
                "runtimeInSeconds": 33.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                "id": "39",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"MEGAHIT-test_minigut-test_minigut_sample2.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"MEGAHIT-test_minigut-test_minigut_sample2.bam\"\n    samtools index \"MEGAHIT-test_minigut-test_minigut_sample2.bam\"\n\n    if [ MEGAHIT-test_minigut-test_minigut_sample2 = \"MEGAHIT-test_minigut-test_minigut\" ] ; then\n        mv \"MEGAHIT-test_minigut-test_minigut_sample2.bowtie2.log\" \"MEGAHIT-test_minigut.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 1749885
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 4788734
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434788
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 2456
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434780
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 4788734
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434788
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725571
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 1749885
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut-test_minigut_sample2.bam",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 3548578
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut-test_minigut_sample2.bam.bai",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 7816
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut-test_minigut_sample2.bowtie2.log",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 590
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 116
                    }
                ],
                "avgCPU": 84.2,
                "inputFilesBytes": 15893010,
                "outputFilesBytes": 5306985,
                "memoryInBytes": 58449920,
                "writtenBytes": 24494176,
                "readBytes": 39149584,
                "runtimeInSeconds": 5.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                "id": "40",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"MEGAHIT-test_minigut-test_minigut.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"MEGAHIT-test_minigut-test_minigut.bam\"\n    samtools index \"MEGAHIT-test_minigut-test_minigut.bam\"\n\n    if [ MEGAHIT-test_minigut-test_minigut = \"MEGAHIT-test_minigut-test_minigut\" ] ; then\n        mv \"MEGAHIT-test_minigut-test_minigut.bowtie2.log\" \"MEGAHIT-test_minigut.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 1749885
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 4788734
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434788
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 2456
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434780
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 4788734
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434788
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239664
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/34/adfd77975be3d0c5eaa06394c1187e/",
                        "sizeInBytes": 1749885
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut-test_minigut.bam",
                        "path": "/34/adfd77975be3d0c5eaa06394c1187e/",
                        "sizeInBytes": 6011051
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut-test_minigut.bam.bai",
                        "path": "/34/adfd77975be3d0c5eaa06394c1187e/",
                        "sizeInBytes": 22752
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut.bowtie2.log",
                        "path": "/34/adfd77975be3d0c5eaa06394c1187e/",
                        "sizeInBytes": 600
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/34/adfd77975be3d0c5eaa06394c1187e/",
                        "sizeInBytes": 116
                    }
                ],
                "avgCPU": 90.7,
                "inputFilesBytes": 19044058,
                "outputFilesBytes": 7784404,
                "memoryInBytes": 77393920,
                "writtenBytes": 52232948,
                "readBytes": 70026619,
                "runtimeInSeconds": 34.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                "id": "44",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "export OMP_NUM_THREADS=1\n\n    jgi_summarize_bam_contig_depths \\\n        --outputDepth MEGAHIT-test_minigut-depth.txt \\\n         \\\n        MEGAHIT-test_minigut-test_minigut_sample2.bam MEGAHIT-test_minigut-test_minigut.bam\n\n    bgzip --threads 1 MEGAHIT-test_minigut-depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut-test_minigut_sample2.bam",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 3548578
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut-test_minigut.bam",
                        "path": "/34/adfd77975be3d0c5eaa06394c1187e/",
                        "sizeInBytes": 6011051
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut-test_minigut_sample2.bam.bai",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 7816
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut-test_minigut.bam.bai",
                        "path": "/34/adfd77975be3d0c5eaa06394c1187e/",
                        "sizeInBytes": 22752
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut-depth.txt.gz",
                        "path": "/f6/6a47e0524654d82be0e49d00c99f57/",
                        "sizeInBytes": 5294
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/f6/6a47e0524654d82be0e49d00c99f57/",
                        "sizeInBytes": 82
                    }
                ],
                "avgCPU": 75.0,
                "inputFilesBytes": 9590197,
                "outputFilesBytes": 5375,
                "memoryInBytes": 2883584,
                "writtenBytes": 19589,
                "readBytes": 9645095,
                "runtimeInSeconds": 1.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                "id": "42",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "export OMP_NUM_THREADS=1\n\n    jgi_summarize_bam_contig_depths \\\n        --outputDepth MEGAHIT-test_minigut_sample2-depth.txt \\\n         \\\n        MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam MEGAHIT-test_minigut_sample2-test_minigut.bam\n\n    bgzip --threads 1 MEGAHIT-test_minigut_sample2-depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam",
                        "path": "/d3/c332ef8efac5a782924ca4114ed8cd/",
                        "sizeInBytes": 3608114
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut.bam",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 6956328
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam.bai",
                        "path": "/d3/c332ef8efac5a782924ca4114ed8cd/",
                        "sizeInBytes": 104976
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut.bam.bai",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 10584
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2-depth.txt.gz",
                        "path": "/2e/a229c3916a098bd7377027fedb4d42/",
                        "sizeInBytes": 18819
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/2e/a229c3916a098bd7377027fedb4d42/",
                        "sizeInBytes": 82
                    }
                ],
                "avgCPU": 89.8,
                "inputFilesBytes": 10680002,
                "outputFilesBytes": 18901,
                "memoryInBytes": 15638528,
                "writtenBytes": 75355,
                "readBytes": 10692143,
                "runtimeInSeconds": 3.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                "id": "43",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "export OMP_NUM_THREADS=1\n\n    jgi_summarize_bam_contig_depths \\\n        --outputDepth SPAdes-test_minigut-depth.txt \\\n         \\\n        SPAdes-test_minigut-test_minigut_sample2.bam SPAdes-test_minigut-test_minigut.bam\n\n    bgzip --threads 1 SPAdes-test_minigut-depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut-test_minigut_sample2.bam",
                        "path": "/b3/84346a33369d5dc4712e03db3b5e82/",
                        "sizeInBytes": 3547190
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut-test_minigut.bam",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 6021434
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut-test_minigut_sample2.bam.bai",
                        "path": "/b3/84346a33369d5dc4712e03db3b5e82/",
                        "sizeInBytes": 3648
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut-test_minigut.bam.bai",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 7576
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut-depth.txt.gz",
                        "path": "/4d/44326243720ca4a7cc916be905b3c4/",
                        "sizeInBytes": 2127
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/4d/44326243720ca4a7cc916be905b3c4/",
                        "sizeInBytes": 82
                    }
                ],
                "avgCPU": 83.4,
                "inputFilesBytes": 9579847,
                "outputFilesBytes": 2208,
                "memoryInBytes": 15355904,
                "writtenBytes": 9117,
                "readBytes": 9646788,
                "runtimeInSeconds": 1.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                "id": "41",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "export OMP_NUM_THREADS=1\n\n    jgi_summarize_bam_contig_depths \\\n        --outputDepth SPAdes-test_minigut_sample2-depth.txt \\\n         \\\n        SPAdes-test_minigut_sample2-test_minigut.bam SPAdes-test_minigut_sample2-test_minigut_sample2.bam\n\n    bgzip --threads 1 SPAdes-test_minigut_sample2-depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2-test_minigut.bam",
                        "path": "/e5/0b51f7ab520a9b0717d009ec567a92/",
                        "sizeInBytes": 7011332
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2-test_minigut_sample2.bam",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 3820454
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2-test_minigut.bam.bai",
                        "path": "/e5/0b51f7ab520a9b0717d009ec567a92/",
                        "sizeInBytes": 42120
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2-test_minigut_sample2.bam.bai",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 416808
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2-depth.txt.gz",
                        "path": "/79/03b1ed263b1ee1ec46fe396818f239/",
                        "sizeInBytes": 71343
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/79/03b1ed263b1ee1ec46fe396818f239/",
                        "sizeInBytes": 82
                    }
                ],
                "avgCPU": 92.3,
                "inputFilesBytes": 11290714,
                "outputFilesBytes": 71425,
                "memoryInBytes": 16302080,
                "writtenBytes": 404597,
                "readBytes": 11236182,
                "runtimeInSeconds": 6.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                "id": "46",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip -f MEGAHIT-test_minigut-depth.txt.gz\n    bioawk -t '{ { if (NR > 1) { { print $1, $3 } } } }' MEGAHIT-test_minigut-depth.txt > test_minigut_mb2_depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:CONVERT_DEPTHS\":\n        bioawk: $(bioawk --version | cut -f 3 -d ' ' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 1749885
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut-depth.txt.gz",
                        "path": "/f6/6a47e0524654d82be0e49d00c99f57/",
                        "sizeInBytes": 5294
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/5d/993375e765ff00387f46f25c0cf79a/",
                        "sizeInBytes": 1749885
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_mb2_depth.txt",
                        "path": "/5d/993375e765ff00387f46f25c0cf79a/",
                        "sizeInBytes": 4486
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/5d/993375e765ff00387f46f25c0cf79a/",
                        "sizeInBytes": 62
                    }
                ],
                "avgCPU": 33.8,
                "inputFilesBytes": 1755179,
                "outputFilesBytes": 1754433,
                "memoryInBytes": 2977792,
                "writtenBytes": 17430,
                "readBytes": 61859,
                "runtimeInSeconds": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                "id": "45",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gzip -d -f MEGAHIT-test_minigut-depth.txt.gz\n\n    metabat2 \\\n        -m 1500 --unbinned --seed 1 \\\n        -i MEGAHIT-test_minigut.contigs.fa \\\n        -a MEGAHIT-test_minigut-depth.txt \\\n        -t 1 \\\n        --saveCls \\\n        -o metabat2/MEGAHIT-MetaBAT2-test_minigut\n\n    mv metabat2/MEGAHIT-MetaBAT2-test_minigut MEGAHIT-MetaBAT2-test_minigut.tsv\n    mv metabat2 bins\n\n    gzip MEGAHIT-MetaBAT2-test_minigut.tsv\n    find ./bins/ -name \"*.fa\" -type f | xargs -t -n 1 bgzip -@ 1\n    find ./bins/ -name \"*[lowDepth,tooShort,unbinned].fa.gz\" -type f -exec mv {} . \\;\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_METABAT2\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 1749885
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut-depth.txt.gz",
                        "path": "/f6/6a47e0524654d82be0e49d00c99f57/",
                        "sizeInBytes": 5294
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.tooShort.fa.gz",
                        "path": "/f7/386b0dd3ad61e1c24197838c86dc85/",
                        "sizeInBytes": 9976
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.lowDepth.fa.gz",
                        "path": "/f7/386b0dd3ad61e1c24197838c86dc85/",
                        "sizeInBytes": 28
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.fa.gz",
                        "path": "/f7/386b0dd3ad61e1c24197838c86dc85/",
                        "sizeInBytes": 53910
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.tsv.gz",
                        "path": "/f7/386b0dd3ad61e1c24197838c86dc85/",
                        "sizeInBytes": 542
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa.gz",
                        "path": "/386b0dd3ad61e1c24197838c86dc85/bins/",
                        "sizeInBytes": 257814
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa.gz",
                        "path": "/386b0dd3ad61e1c24197838c86dc85/bins/",
                        "sizeInBytes": 230503
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/f7/386b0dd3ad61e1c24197838c86dc85/",
                        "sizeInBytes": 63
                    }
                ],
                "avgCPU": 55.5,
                "inputFilesBytes": 1755179,
                "outputFilesBytes": 552836,
                "memoryInBytes": 3727360,
                "writtenBytes": 2340403,
                "readBytes": 3708508,
                "runtimeInSeconds": 1.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                "id": "47",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip -f MEGAHIT-test_minigut_sample2-depth.txt.gz\n    bioawk -t '{ { if (NR > 1) { { print $1, $3 } } } }' MEGAHIT-test_minigut_sample2-depth.txt > test_minigut_sample2_mb2_depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:CONVERT_DEPTHS\":\n        bioawk: $(bioawk --version | cut -f 3 -d ' ' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 681245
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2-depth.txt.gz",
                        "path": "/2e/a229c3916a098bd7377027fedb4d42/",
                        "sizeInBytes": 18819
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/d5/f40841a76271322e688e636a9f56be/",
                        "sizeInBytes": 681245
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_mb2_depth.txt",
                        "path": "/d5/f40841a76271322e688e636a9f56be/",
                        "sizeInBytes": 22295
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/d5/f40841a76271322e688e636a9f56be/",
                        "sizeInBytes": 62
                    }
                ],
                "avgCPU": 32.0,
                "inputFilesBytes": 700064,
                "outputFilesBytes": 703602,
                "memoryInBytes": 2973696,
                "writtenBytes": 77437,
                "readBytes": 117619,
                "runtimeInSeconds": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                "id": "48",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gzip -d -f MEGAHIT-test_minigut_sample2-depth.txt.gz\n\n    metabat2 \\\n        -m 1500 --unbinned --seed 1 \\\n        -i MEGAHIT-test_minigut_sample2.contigs.fa \\\n        -a MEGAHIT-test_minigut_sample2-depth.txt \\\n        -t 1 \\\n        --saveCls \\\n        -o metabat2/MEGAHIT-MetaBAT2-test_minigut_sample2\n\n    mv metabat2/MEGAHIT-MetaBAT2-test_minigut_sample2 MEGAHIT-MetaBAT2-test_minigut_sample2.tsv\n    mv metabat2 bins\n\n    gzip MEGAHIT-MetaBAT2-test_minigut_sample2.tsv\n    find ./bins/ -name \"*.fa\" -type f | xargs -t -n 1 bgzip -@ 1\n    find ./bins/ -name \"*[lowDepth,tooShort,unbinned].fa.gz\" -type f -exec mv {} . \\;\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_METABAT2\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 681245
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2-depth.txt.gz",
                        "path": "/2e/a229c3916a098bd7377027fedb4d42/",
                        "sizeInBytes": 18819
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.tooShort.fa.gz",
                        "path": "/68/07f3ae0f9899f845f569a1c6edf87d/",
                        "sizeInBytes": 188338
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.lowDepth.fa.gz",
                        "path": "/68/07f3ae0f9899f845f569a1c6edf87d/",
                        "sizeInBytes": 28
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.fa.gz",
                        "path": "/68/07f3ae0f9899f845f569a1c6edf87d/",
                        "sizeInBytes": 17296
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.tsv.gz",
                        "path": "/68/07f3ae0f9899f845f569a1c6edf87d/",
                        "sizeInBytes": 130
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/68/07f3ae0f9899f845f569a1c6edf87d/",
                        "sizeInBytes": 63
                    }
                ],
                "avgCPU": 32.1,
                "inputFilesBytes": 700064,
                "outputFilesBytes": 205854,
                "memoryInBytes": 2895872,
                "writtenBytes": 916933,
                "readBytes": 1633120,
                "runtimeInSeconds": 1.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                "id": "50",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip -f SPAdes-test_minigut-depth.txt.gz\n    bioawk -t '{ { if (NR > 1) { { print $1, $3 } } } }' SPAdes-test_minigut-depth.txt > test_minigut_mb2_depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:CONVERT_DEPTHS\":\n        bioawk: $(bioawk --version | cut -f 3 -d ' ' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 1772115
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut-depth.txt.gz",
                        "path": "/4d/44326243720ca4a7cc916be905b3c4/",
                        "sizeInBytes": 2127
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/ae/89e6186b281453f220f2dac613fb60/",
                        "sizeInBytes": 1772115
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_mb2_depth.txt",
                        "path": "/ae/89e6186b281453f220f2dac613fb60/",
                        "sizeInBytes": 2951
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ae/89e6186b281453f220f2dac613fb60/",
                        "sizeInBytes": 62
                    }
                ],
                "avgCPU": 32.9,
                "inputFilesBytes": 1774242,
                "outputFilesBytes": 1775128,
                "memoryInBytes": 2969600,
                "writtenBytes": 8603,
                "readBytes": 51394,
                "runtimeInSeconds": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                "id": "49",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gzip -d -f SPAdes-test_minigut-depth.txt.gz\n\n    metabat2 \\\n        -m 1500 --unbinned --seed 1 \\\n        -i SPAdes-test_minigut_scaffolds.fasta \\\n        -a SPAdes-test_minigut-depth.txt \\\n        -t 1 \\\n        --saveCls \\\n        -o metabat2/SPAdes-MetaBAT2-test_minigut\n\n    mv metabat2/SPAdes-MetaBAT2-test_minigut SPAdes-MetaBAT2-test_minigut.tsv\n    mv metabat2 bins\n\n    gzip SPAdes-MetaBAT2-test_minigut.tsv\n    find ./bins/ -name \"*.fa\" -type f | xargs -t -n 1 bgzip -@ 1\n    find ./bins/ -name \"*[lowDepth,tooShort,unbinned].fa.gz\" -type f -exec mv {} . \\;\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_METABAT2\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 1772115
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut-depth.txt.gz",
                        "path": "/4d/44326243720ca4a7cc916be905b3c4/",
                        "sizeInBytes": 2127
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.tooShort.fa.gz",
                        "path": "/2a/77fb54be4836e684dc38834c52daa3/",
                        "sizeInBytes": 3588
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.lowDepth.fa.gz",
                        "path": "/2a/77fb54be4836e684dc38834c52daa3/",
                        "sizeInBytes": 28
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.fa.gz",
                        "path": "/2a/77fb54be4836e684dc38834c52daa3/",
                        "sizeInBytes": 48366
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.tsv.gz",
                        "path": "/2a/77fb54be4836e684dc38834c52daa3/",
                        "sizeInBytes": 460
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa.gz",
                        "path": "/77fb54be4836e684dc38834c52daa3/bins/",
                        "sizeInBytes": 233589
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa.gz",
                        "path": "/77fb54be4836e684dc38834c52daa3/bins/",
                        "sizeInBytes": 267493
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/2a/77fb54be4836e684dc38834c52daa3/",
                        "sizeInBytes": 63
                    }
                ],
                "avgCPU": 53.8,
                "inputFilesBytes": 1774242,
                "outputFilesBytes": 553587,
                "memoryInBytes": 8912896,
                "writtenBytes": 2334094,
                "readBytes": 3703055,
                "runtimeInSeconds": 1.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                "id": "52",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip -f SPAdes-test_minigut_sample2-depth.txt.gz\n    bioawk -t '{ { if (NR > 1) { { print $1, $3 } } } }' SPAdes-test_minigut_sample2-depth.txt > test_minigut_sample2_mb2_depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:CONVERT_DEPTHS\":\n        bioawk: $(bioawk --version | cut -f 3 -d ' ' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 2133044
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2-depth.txt.gz",
                        "path": "/79/03b1ed263b1ee1ec46fe396818f239/",
                        "sizeInBytes": 71343
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/3e/a086d77b79c2823ca55898ab257d54/",
                        "sizeInBytes": 2133044
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_mb2_depth.txt",
                        "path": "/3e/a086d77b79c2823ca55898ab257d54/",
                        "sizeInBytes": 212466
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/3e/a086d77b79c2823ca55898ab257d54/",
                        "sizeInBytes": 62
                    }
                ],
                "avgCPU": 106.7,
                "inputFilesBytes": 2204386,
                "outputFilesBytes": 2345571,
                "memoryInBytes": 2891776,
                "writtenBytes": 544292,
                "readBytes": 446824,
                "runtimeInSeconds": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                "id": "51",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gzip -d -f SPAdes-test_minigut_sample2-depth.txt.gz\n\n    metabat2 \\\n        -m 1500 --unbinned --seed 1 \\\n        -i SPAdes-test_minigut_sample2_scaffolds.fasta \\\n        -a SPAdes-test_minigut_sample2-depth.txt \\\n        -t 1 \\\n        --saveCls \\\n        -o metabat2/SPAdes-MetaBAT2-test_minigut_sample2\n\n    mv metabat2/SPAdes-MetaBAT2-test_minigut_sample2 SPAdes-MetaBAT2-test_minigut_sample2.tsv\n    mv metabat2 bins\n\n    gzip SPAdes-MetaBAT2-test_minigut_sample2.tsv\n    find ./bins/ -name \"*.fa\" -type f | xargs -t -n 1 bgzip -@ 1\n    find ./bins/ -name \"*[lowDepth,tooShort,unbinned].fa.gz\" -type f -exec mv {} . \\;\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_METABAT2\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 2133044
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2-depth.txt.gz",
                        "path": "/79/03b1ed263b1ee1ec46fe396818f239/",
                        "sizeInBytes": 71343
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.tooShort.fa.gz",
                        "path": "/b9/bf3c2ffa52aa3f58e4f64637bde899/",
                        "sizeInBytes": 574568
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.lowDepth.fa.gz",
                        "path": "/b9/bf3c2ffa52aa3f58e4f64637bde899/",
                        "sizeInBytes": 28
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.fa.gz",
                        "path": "/b9/bf3c2ffa52aa3f58e4f64637bde899/",
                        "sizeInBytes": 87108
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.tsv.gz",
                        "path": "/b9/bf3c2ffa52aa3f58e4f64637bde899/",
                        "sizeInBytes": 1757
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/b9/bf3c2ffa52aa3f58e4f64637bde899/",
                        "sizeInBytes": 63
                    }
                ],
                "avgCPU": 69.6,
                "inputFilesBytes": 2204386,
                "outputFilesBytes": 663523,
                "memoryInBytes": 2891776,
                "writtenBytes": 3136196,
                "readBytes": 5457969,
                "runtimeInSeconds": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                "id": "53",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "mkdir input/ && mv MEGAHIT-test_minigut.contigs.fa input/\n    run_MaxBin.pl \\\n        -contig input/MEGAHIT-test_minigut.contigs.fa \\\n        -abund test_minigut_mb2_depth.txt \\\n        -thread 1 \\\n         \\\n        -out MEGAHIT-MaxBin2-test_minigut\n\n    gzip *.fasta *.noclass *.tooshort *log *.marker\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAXBIN2\":\n        maxbin2: $( run_MaxBin.pl -v | head -n 1 | sed 's/MaxBin //' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT",
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/5d/993375e765ff00387f46f25c0cf79a/",
                        "sizeInBytes": 1749885
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_mb2_depth.txt",
                        "path": "/5d/993375e765ff00387f46f25c0cf79a/",
                        "sizeInBytes": 4486
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fasta.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 275379
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fasta.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 239713
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.summary",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 179
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.log.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 786
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.marker.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 447
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.noclass.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 20
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.tooshort.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 10311
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.marker_of_each_bin.tar.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 7336
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 53
                    }
                ],
                "avgCPU": 81.7,
                "inputFilesBytes": 1754371,
                "outputFilesBytes": 534223,
                "memoryInBytes": 47374336,
                "writtenBytes": 6676392,
                "readBytes": 125360886,
                "runtimeInSeconds": 15.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "56",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa.gz",
                        "path": "/386b0dd3ad61e1c24197838c86dc85/bins/",
                        "sizeInBytes": 230503
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa",
                        "path": "/d1/af5b3f93228497d9441a56a2846bdd/",
                        "sizeInBytes": 739909
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/d1/af5b3f93228497d9441a56a2846bdd/",
                        "sizeInBytes": 55
                    }
                ],
                "avgCPU": 30.7,
                "inputFilesBytes": 230503,
                "outputFilesBytes": 739964,
                "memoryInBytes": 0,
                "writtenBytes": 740862,
                "readBytes": 326058,
                "runtimeInSeconds": 0.046
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "55",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa.gz",
                        "path": "/386b0dd3ad61e1c24197838c86dc85/bins/",
                        "sizeInBytes": 257814
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa",
                        "path": "/61/cf25917be22c0d7cc036bbb291ff61/",
                        "sizeInBytes": 826502
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/61/cf25917be22c0d7cc036bbb291ff61/",
                        "sizeInBytes": 55
                    }
                ],
                "avgCPU": 53.7,
                "inputFilesBytes": 257814,
                "outputFilesBytes": 826556,
                "memoryInBytes": 2949120,
                "writtenBytes": 827437,
                "readBytes": 353344,
                "runtimeInSeconds": 0.079
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                "id": "54",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py MEGAHIT-MetaBAT2-test_minigut.unbinned.fa.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.fa.gz",
                        "path": "/f7/386b0dd3ad61e1c24197838c86dc85/",
                        "sizeInBytes": 53910
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.gz",
                        "path": "/9f/2be4bfc6b728578afcd33f072dd30f/",
                        "sizeInBytes": 8772
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.gz",
                        "path": "/9f/2be4bfc6b728578afcd33f072dd30f/",
                        "sizeInBytes": 5866
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.pooled.fa.gz",
                        "path": "/9f/2be4bfc6b728578afcd33f072dd30f/",
                        "sizeInBytes": 38661
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.remaining.fa.gz",
                        "path": "/9f/2be4bfc6b728578afcd33f072dd30f/",
                        "sizeInBytes": 20
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/9f/2be4bfc6b728578afcd33f072dd30f/",
                        "sizeInBytes": 95
                    }
                ],
                "avgCPU": 27.8,
                "inputFilesBytes": 53910,
                "outputFilesBytes": 53414,
                "memoryInBytes": 69177344,
                "writtenBytes": 227375,
                "readBytes": 12173209,
                "runtimeInSeconds": 10.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                "id": "57",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "mkdir input/ && mv MEGAHIT-test_minigut_sample2.contigs.fa input/\n    run_MaxBin.pl \\\n        -contig input/MEGAHIT-test_minigut_sample2.contigs.fa \\\n        -abund test_minigut_sample2_mb2_depth.txt \\\n        -thread 1 \\\n         \\\n        -out MEGAHIT-MaxBin2-test_minigut_sample2\n\n    gzip *.fasta *.noclass *.tooshort *log *.marker\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAXBIN2\":\n        maxbin2: $( run_MaxBin.pl -v | head -n 1 | sed 's/MaxBin //' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT",
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/d5/f40841a76271322e688e636a9f56be/",
                        "sizeInBytes": 681245
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_mb2_depth.txt",
                        "path": "/d5/f40841a76271322e688e636a9f56be/",
                        "sizeInBytes": 22295
                    }
                ],
                "avgCPU": 0.0,
                "inputFilesBytes": 703540,
                "outputFilesBytes": 0,
                "memoryInBytes": 0,
                "writtenBytes": 0,
                "readBytes": 0,
                "runtimeInSeconds": 4.235
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                "id": "58",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.fa.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.fa.gz",
                        "path": "/68/07f3ae0f9899f845f569a1c6edf87d/",
                        "sizeInBytes": 17296
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz",
                        "path": "/ab/a491d97cfd32cab33ae565081f410e/",
                        "sizeInBytes": 2248
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz",
                        "path": "/ab/a491d97cfd32cab33ae565081f410e/",
                        "sizeInBytes": 1187
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.pooled.fa.gz",
                        "path": "/ab/a491d97cfd32cab33ae565081f410e/",
                        "sizeInBytes": 14354
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.remaining.fa.gz",
                        "path": "/ab/a491d97cfd32cab33ae565081f410e/",
                        "sizeInBytes": 20
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ab/a491d97cfd32cab33ae565081f410e/",
                        "sizeInBytes": 95
                    }
                ],
                "avgCPU": 87.7,
                "inputFilesBytes": 17296,
                "outputFilesBytes": 17904,
                "memoryInBytes": 55529472,
                "writtenBytes": 74084,
                "readBytes": 12018783,
                "runtimeInSeconds": 2.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                "id": "59",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "mkdir input/ && mv SPAdes-test_minigut_scaffolds.fasta input/\n    run_MaxBin.pl \\\n        -contig input/SPAdes-test_minigut_scaffolds.fasta \\\n        -abund test_minigut_mb2_depth.txt \\\n        -thread 1 \\\n         \\\n        -out SPAdes-MaxBin2-test_minigut\n\n    gzip *.fasta *.noclass *.tooshort *log *.marker\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAXBIN2\":\n        maxbin2: $( run_MaxBin.pl -v | head -n 1 | sed 's/MaxBin //' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT",
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/ae/89e6186b281453f220f2dac613fb60/",
                        "sizeInBytes": 1772115
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_mb2_depth.txt",
                        "path": "/ae/89e6186b281453f220f2dac613fb60/",
                        "sizeInBytes": 2951
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fasta.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 266445
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fasta.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 255741
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.summary",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 177
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.log.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 819
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.marker.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 439
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.noclass.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 20
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.tooshort.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 3525
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.marker_of_each_bin.tar.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 7585
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 53
                    }
                ],
                "avgCPU": 87.6,
                "inputFilesBytes": 1775066,
                "outputFilesBytes": 534804,
                "memoryInBytes": 210087936,
                "writtenBytes": 6911819,
                "readBytes": 130938230,
                "runtimeInSeconds": 14.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                "id": "60",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py SPAdes-MetaBAT2-test_minigut.unbinned.fa.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.fa.gz",
                        "path": "/2a/77fb54be4836e684dc38834c52daa3/",
                        "sizeInBytes": 48366
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.gz",
                        "path": "/5f/2851abe02c0e2835f9e3b09a0b1d62/",
                        "sizeInBytes": 26430
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.gz",
                        "path": "/5f/2851abe02c0e2835f9e3b09a0b1d62/",
                        "sizeInBytes": 14921
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.pooled.fa.gz",
                        "path": "/5f/2851abe02c0e2835f9e3b09a0b1d62/",
                        "sizeInBytes": 6824
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.remaining.fa.gz",
                        "path": "/5f/2851abe02c0e2835f9e3b09a0b1d62/",
                        "sizeInBytes": 20
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/5f/2851abe02c0e2835f9e3b09a0b1d62/",
                        "sizeInBytes": 95
                    }
                ],
                "avgCPU": 86.0,
                "inputFilesBytes": 48366,
                "outputFilesBytes": 48290,
                "memoryInBytes": 52236288,
                "writtenBytes": 203237,
                "readBytes": 12148648,
                "runtimeInSeconds": 3.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "61",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa.gz",
                        "path": "/77fb54be4836e684dc38834c52daa3/bins/",
                        "sizeInBytes": 233589
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa",
                        "path": "/99/9391bef265fc20cdc627372089b79b/",
                        "sizeInBytes": 749812
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/99/9391bef265fc20cdc627372089b79b/",
                        "sizeInBytes": 55
                    }
                ],
                "avgCPU": 37.7,
                "inputFilesBytes": 233589,
                "outputFilesBytes": 749867,
                "memoryInBytes": 0,
                "writtenBytes": 750765,
                "readBytes": 329142,
                "runtimeInSeconds": 0.058
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "62",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa.gz",
                        "path": "/77fb54be4836e684dc38834c52daa3/bins/",
                        "sizeInBytes": 267493
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa",
                        "path": "/2c/dc9657212417f3f1714124a02c7b37/",
                        "sizeInBytes": 857355
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/2c/dc9657212417f3f1714124a02c7b37/",
                        "sizeInBytes": 55
                    }
                ],
                "avgCPU": 56.1,
                "inputFilesBytes": 267493,
                "outputFilesBytes": 857410,
                "memoryInBytes": 4497408,
                "writtenBytes": 858290,
                "readBytes": 363021,
                "runtimeInSeconds": 0.094
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                "id": "63",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "mkdir input/ && mv SPAdes-test_minigut_sample2_scaffolds.fasta input/\n    run_MaxBin.pl \\\n        -contig input/SPAdes-test_minigut_sample2_scaffolds.fasta \\\n        -abund test_minigut_sample2_mb2_depth.txt \\\n        -thread 1 \\\n         \\\n        -out SPAdes-MaxBin2-test_minigut_sample2\n\n    gzip *.fasta *.noclass *.tooshort *log *.marker\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAXBIN2\":\n        maxbin2: $( run_MaxBin.pl -v | head -n 1 | sed 's/MaxBin //' )\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT",
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/3e/a086d77b79c2823ca55898ab257d54/",
                        "sizeInBytes": 2133044
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_mb2_depth.txt",
                        "path": "/3e/a086d77b79c2823ca55898ab257d54/",
                        "sizeInBytes": 212466
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fasta.gz",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 53267
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.summary",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 123
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.log.gz",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 871
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.marker.gz",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 406
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.gz",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 29904
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.tooshort.gz",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 545159
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.marker_of_each_bin.tar.gz",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 349
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 53
                    }
                ],
                "avgCPU": 89.4,
                "inputFilesBytes": 2345509,
                "outputFilesBytes": 630132,
                "memoryInBytes": 35532800,
                "writtenBytes": 3947867,
                "readBytes": 58179172,
                "runtimeInSeconds": 8.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                "id": "64",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py SPAdes-MetaBAT2-test_minigut_sample2.unbinned.fa.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.fa.gz",
                        "path": "/b9/bf3c2ffa52aa3f58e4f64637bde899/",
                        "sizeInBytes": 87108
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz",
                        "path": "/be/a6b6583600ddf490d44a92dfcee45c/",
                        "sizeInBytes": 2620
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz",
                        "path": "/be/a6b6583600ddf490d44a92dfcee45c/",
                        "sizeInBytes": 2280
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.pooled.fa.gz",
                        "path": "/be/a6b6583600ddf490d44a92dfcee45c/",
                        "sizeInBytes": 79034
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.remaining.fa.gz",
                        "path": "/be/a6b6583600ddf490d44a92dfcee45c/",
                        "sizeInBytes": 20
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/be/a6b6583600ddf490d44a92dfcee45c/",
                        "sizeInBytes": 95
                    }
                ],
                "avgCPU": 91.4,
                "inputFilesBytes": 87108,
                "outputFilesBytes": 84049,
                "memoryInBytes": 69259264,
                "writtenBytes": 374696,
                "readBytes": 12323065,
                "runtimeInSeconds": 4.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT",
                "id": "65",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "if [ -n \"MEGAHIT-MaxBin2-test_minigut.001.fasta.gz MEGAHIT-MaxBin2-test_minigut.002.fasta.gz\" ]\n    then\n        for file in MEGAHIT-MaxBin2-test_minigut.001.fasta.gz MEGAHIT-MaxBin2-test_minigut.002.fasta.gz; do\n            [[ ${file} =~ (.*).fasta.gz ]];\n            bin=\"${BASH_REMATCH[1]}\"\n            mv ${file} ${bin}.fa.gz\n        done\n    fi"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fasta.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 275379
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fasta.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 239713
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa.gz",
                        "path": "/f5/1fd9cc6adda86286aa0f375123cfc8/",
                        "sizeInBytes": 275379
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa.gz",
                        "path": "/f5/1fd9cc6adda86286aa0f375123cfc8/",
                        "sizeInBytes": 239713
                    }
                ],
                "avgCPU": 35.0,
                "inputFilesBytes": 515092,
                "outputFilesBytes": 515092,
                "memoryInBytes": 0,
                "writtenBytes": 218,
                "readBytes": 59670,
                "runtimeInSeconds": 0.057
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                "id": "66",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py MEGAHIT-MaxBin2-test_minigut.noclass.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.noclass.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 20
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.noclass.pooled.fa.gz",
                        "path": "/cf/6ae0e3afea0a1ec59857e2bc7f3f91/",
                        "sizeInBytes": 20
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.noclass.remaining.fa.gz",
                        "path": "/cf/6ae0e3afea0a1ec59857e2bc7f3f91/",
                        "sizeInBytes": 20
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/cf/6ae0e3afea0a1ec59857e2bc7f3f91/",
                        "sizeInBytes": 95
                    }
                ],
                "avgCPU": 91.7,
                "inputFilesBytes": 20,
                "outputFilesBytes": 135,
                "memoryInBytes": 59088896,
                "writtenBytes": 566,
                "readBytes": 11945881,
                "runtimeInSeconds": 1.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "67",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.gz",
                        "path": "/9f/2be4bfc6b728578afcd33f072dd30f/",
                        "sizeInBytes": 8772
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/0f/da507fa0645b75fe52bef79d0cff50/",
                        "sizeInBytes": 27640
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0f/da507fa0645b75fe52bef79d0cff50/",
                        "sizeInBytes": 57
                    }
                ],
                "avgCPU": 94.1,
                "inputFilesBytes": 8772,
                "outputFilesBytes": 27697,
                "memoryInBytes": 0,
                "writtenBytes": 28579,
                "readBytes": 104316,
                "runtimeInSeconds": 0.016
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "68",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.gz",
                        "path": "/9f/2be4bfc6b728578afcd33f072dd30f/",
                        "sizeInBytes": 5866
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/0c/e5297ab42995f985f9f5e10d0aa650/",
                        "sizeInBytes": 18168
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0c/e5297ab42995f985f9f5e10d0aa650/",
                        "sizeInBytes": 57
                    }
                ],
                "avgCPU": 64.0,
                "inputFilesBytes": 5866,
                "outputFilesBytes": 18224,
                "memoryInBytes": 2871296,
                "writtenBytes": 19107,
                "readBytes": 101410,
                "runtimeInSeconds": 0.035
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "69",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz",
                        "path": "/ab/a491d97cfd32cab33ae565081f410e/",
                        "sizeInBytes": 2248
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/cd/882f370ae493dd9c8daef9d110ff5c/",
                        "sizeInBytes": 6590
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/cd/882f370ae493dd9c8daef9d110ff5c/",
                        "sizeInBytes": 57
                    }
                ],
                "avgCPU": 77.1,
                "inputFilesBytes": 2248,
                "outputFilesBytes": 6647,
                "memoryInBytes": 3047424,
                "writtenBytes": 7529,
                "readBytes": 97801,
                "runtimeInSeconds": 0.037
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "70",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz",
                        "path": "/ab/a491d97cfd32cab33ae565081f410e/",
                        "sizeInBytes": 1187
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/25/fad435a8679b7b2d6e7a0c0376b8f8/",
                        "sizeInBytes": 3340
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/25/fad435a8679b7b2d6e7a0c0376b8f8/",
                        "sizeInBytes": 57
                    }
                ],
                "avgCPU": 57.7,
                "inputFilesBytes": 1187,
                "outputFilesBytes": 3397,
                "memoryInBytes": 2998272,
                "writtenBytes": 4279,
                "readBytes": 96740,
                "runtimeInSeconds": 0.055
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT",
                "id": "71",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "if [ -n \"SPAdes-MaxBin2-test_minigut.001.fasta.gz SPAdes-MaxBin2-test_minigut.002.fasta.gz\" ]\n    then\n        for file in SPAdes-MaxBin2-test_minigut.001.fasta.gz SPAdes-MaxBin2-test_minigut.002.fasta.gz; do\n            [[ ${file} =~ (.*).fasta.gz ]];\n            bin=\"${BASH_REMATCH[1]}\"\n            mv ${file} ${bin}.fa.gz\n        done\n    fi"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fasta.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 266445
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fasta.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 255741
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa.gz",
                        "path": "/22/a064f806a885f085a1dcd7975b6a67/",
                        "sizeInBytes": 266445
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa.gz",
                        "path": "/22/a064f806a885f085a1dcd7975b6a67/",
                        "sizeInBytes": 255741
                    }
                ],
                "avgCPU": 72.7,
                "inputFilesBytes": 522186,
                "outputFilesBytes": 522186,
                "memoryInBytes": 0,
                "writtenBytes": 200,
                "readBytes": 59642,
                "runtimeInSeconds": 0.013
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                "id": "72",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py SPAdes-MaxBin2-test_minigut.noclass.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.noclass.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 20
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.noclass.pooled.fa.gz",
                        "path": "/a9/5a9418ee5a7690f314418f66882d81/",
                        "sizeInBytes": 20
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.noclass.remaining.fa.gz",
                        "path": "/a9/5a9418ee5a7690f314418f66882d81/",
                        "sizeInBytes": 20
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/a9/5a9418ee5a7690f314418f66882d81/",
                        "sizeInBytes": 95
                    }
                ],
                "avgCPU": 89.3,
                "inputFilesBytes": 20,
                "outputFilesBytes": 135,
                "memoryInBytes": 57565184,
                "writtenBytes": 564,
                "readBytes": 11945881,
                "runtimeInSeconds": 2.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "74",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.gz",
                        "path": "/5f/2851abe02c0e2835f9e3b09a0b1d62/",
                        "sizeInBytes": 14921
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/db/0958d1883331c1086429c2cb33e79c/",
                        "sizeInBytes": 47363
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/db/0958d1883331c1086429c2cb33e79c/",
                        "sizeInBytes": 57
                    }
                ],
                "avgCPU": 64.6,
                "inputFilesBytes": 14921,
                "outputFilesBytes": 47420,
                "memoryInBytes": 0,
                "writtenBytes": 48317,
                "readBytes": 110484,
                "runtimeInSeconds": 0.016
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "73",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.gz",
                        "path": "/5f/2851abe02c0e2835f9e3b09a0b1d62/",
                        "sizeInBytes": 26430
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/1f/e0a17ccc19b5d348df7702e0ffceea/",
                        "sizeInBytes": 86173
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/1f/e0a17ccc19b5d348df7702e0ffceea/",
                        "sizeInBytes": 57
                    }
                ],
                "avgCPU": 62.3,
                "inputFilesBytes": 26430,
                "outputFilesBytes": 86230,
                "memoryInBytes": 0,
                "writtenBytes": 87112,
                "readBytes": 121973,
                "runtimeInSeconds": 0.017
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT",
                "id": "75",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "if [ -n \"SPAdes-MaxBin2-test_minigut_sample2.001.fasta.gz\" ]\n    then\n        for file in SPAdes-MaxBin2-test_minigut_sample2.001.fasta.gz; do\n            [[ ${file} =~ (.*).fasta.gz ]];\n            bin=\"${BASH_REMATCH[1]}\"\n            mv ${file} ${bin}.fa.gz\n        done\n    fi"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fasta.gz",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 53267
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa.gz",
                        "path": "/63/d3de4efa2361a3e58ff7c94485c9b2/",
                        "sizeInBytes": 53267
                    }
                ],
                "avgCPU": 58.5,
                "inputFilesBytes": 53267,
                "outputFilesBytes": 53267,
                "memoryInBytes": 0,
                "writtenBytes": 209,
                "readBytes": 51896,
                "runtimeInSeconds": 0.011
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                "id": "76",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py SPAdes-MaxBin2-test_minigut_sample2.noclass.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.gz",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 29904
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.gz",
                        "path": "/07/d79186f73346bf557b0b330d22aec1/",
                        "sizeInBytes": 1035
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.gz",
                        "path": "/07/d79186f73346bf557b0b330d22aec1/",
                        "sizeInBytes": 945
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.pooled.fa.gz",
                        "path": "/07/d79186f73346bf557b0b330d22aec1/",
                        "sizeInBytes": 28679
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.remaining.fa.gz",
                        "path": "/07/d79186f73346bf557b0b330d22aec1/",
                        "sizeInBytes": 20
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/07/d79186f73346bf557b0b330d22aec1/",
                        "sizeInBytes": 95
                    }
                ],
                "avgCPU": 89.4,
                "inputFilesBytes": 29904,
                "outputFilesBytes": 30773,
                "memoryInBytes": 55390208,
                "writtenBytes": 136397,
                "readBytes": 12080840,
                "runtimeInSeconds": 3.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "78",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz",
                        "path": "/be/a6b6583600ddf490d44a92dfcee45c/",
                        "sizeInBytes": 2280
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/b0/c4c13fb5a30180e93f30b443ab1807/",
                        "sizeInBytes": 6614
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/b0/c4c13fb5a30180e93f30b443ab1807/",
                        "sizeInBytes": 57
                    }
                ],
                "avgCPU": 139.1,
                "inputFilesBytes": 2280,
                "outputFilesBytes": 6671,
                "memoryInBytes": 0,
                "writtenBytes": 7554,
                "readBytes": 97832,
                "runtimeInSeconds": 0.016
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "77",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz",
                        "path": "/be/a6b6583600ddf490d44a92dfcee45c/",
                        "sizeInBytes": 2620
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/df/ee8e1e889cebae9a0e25195f80675f/",
                        "sizeInBytes": 7810
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/df/ee8e1e889cebae9a0e25195f80675f/",
                        "sizeInBytes": 57
                    }
                ],
                "avgCPU": 139.1,
                "inputFilesBytes": 2620,
                "outputFilesBytes": 7867,
                "memoryInBytes": 0,
                "writtenBytes": 8750,
                "readBytes": 98173,
                "runtimeInSeconds": 0.016
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "80",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MaxBin2-test_minigut.002.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa.gz",
                        "path": "/f5/1fd9cc6adda86286aa0f375123cfc8/",
                        "sizeInBytes": 239713
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa",
                        "path": "/8d/60203145275a433cc075347c0757f7/",
                        "sizeInBytes": 808208
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/8d/60203145275a433cc075347c0757f7/",
                        "sizeInBytes": 55
                    }
                ],
                "avgCPU": 123.1,
                "inputFilesBytes": 239713,
                "outputFilesBytes": 808262,
                "memoryInBytes": 2981888,
                "writtenBytes": 809144,
                "readBytes": 335245,
                "runtimeInSeconds": 0.028
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "79",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MaxBin2-test_minigut.001.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa.gz",
                        "path": "/f5/1fd9cc6adda86286aa0f375123cfc8/",
                        "sizeInBytes": 275379
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa",
                        "path": "/33/d4976d8a94c2e0b2376a0ae32d2791/",
                        "sizeInBytes": 926530
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/33/d4976d8a94c2e0b2376a0ae32d2791/",
                        "sizeInBytes": 55
                    }
                ],
                "avgCPU": 115.9,
                "inputFilesBytes": 275379,
                "outputFilesBytes": 926584,
                "memoryInBytes": 2985984,
                "writtenBytes": 927466,
                "readBytes": 370910,
                "runtimeInSeconds": 0.031
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "82",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MaxBin2-test_minigut.002.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa.gz",
                        "path": "/22/a064f806a885f085a1dcd7975b6a67/",
                        "sizeInBytes": 255741
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa",
                        "path": "/28/2a3d3dcb177d556ecf9d9f6ccff251/",
                        "sizeInBytes": 860225
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/28/2a3d3dcb177d556ecf9d9f6ccff251/",
                        "sizeInBytes": 55
                    }
                ],
                "avgCPU": 72.2,
                "inputFilesBytes": 255741,
                "outputFilesBytes": 860280,
                "memoryInBytes": 3715072,
                "writtenBytes": 861160,
                "readBytes": 351270,
                "runtimeInSeconds": 0.072
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "81",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MaxBin2-test_minigut.001.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa.gz",
                        "path": "/22/a064f806a885f085a1dcd7975b6a67/",
                        "sizeInBytes": 266445
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa",
                        "path": "/e3/858abab7295808ce6e653d7e95d1c9/",
                        "sizeInBytes": 896979
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/e3/858abab7295808ce6e653d7e95d1c9/",
                        "sizeInBytes": 55
                    }
                ],
                "avgCPU": 29.6,
                "inputFilesBytes": 266445,
                "outputFilesBytes": 897034,
                "memoryInBytes": 3579904,
                "writtenBytes": 897929,
                "readBytes": 361994,
                "runtimeInSeconds": 0.1
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "83",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.001.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa.gz",
                        "path": "/63/d3de4efa2361a3e58ff7c94485c9b2/",
                        "sizeInBytes": 53267
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                        "path": "/2c/3e4c6ddb49c5797adf2ca908ee03f0/",
                        "sizeInBytes": 182135
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/2c/3e4c6ddb49c5797adf2ca908ee03f0/",
                        "sizeInBytes": 55
                    }
                ],
                "avgCPU": 86.5,
                "inputFilesBytes": 53267,
                "outputFilesBytes": 182190,
                "memoryInBytes": 2981888,
                "writtenBytes": 183082,
                "readBytes": 148820,
                "runtimeInSeconds": 0.018
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "85",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.gz",
                        "path": "/07/d79186f73346bf557b0b330d22aec1/",
                        "sizeInBytes": 945
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                        "path": "/05/688f483a380c53145735b0ec10e7e1/",
                        "sizeInBytes": 2558
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/05/688f483a380c53145735b0ec10e7e1/",
                        "sizeInBytes": 57
                    }
                ],
                "avgCPU": 136.2,
                "inputFilesBytes": 945,
                "outputFilesBytes": 2614,
                "memoryInBytes": 0,
                "writtenBytes": 3498,
                "readBytes": 96496,
                "runtimeInSeconds": 0.016
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "84",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.gz",
                        "path": "/07/d79186f73346bf557b0b330d22aec1/",
                        "sizeInBytes": 1035
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                        "path": "/25/b26b7734ef45adbb9ce3eccfd31840/",
                        "sizeInBytes": 2806
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/25/b26b7734ef45adbb9ce3eccfd31840/",
                        "sizeInBytes": 57
                    }
                ],
                "avgCPU": 145.5,
                "inputFilesBytes": 1035,
                "outputFilesBytes": 2863,
                "memoryInBytes": 0,
                "writtenBytes": 3746,
                "readBytes": 96585,
                "runtimeInSeconds": 0.016
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "94",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MaxBin2-test_minigut.002 \\\n         \\\n         \\\n        MEGAHIT-MaxBin2-test_minigut.002.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa",
                        "path": "/8d/60203145275a433cc075347c0757f7/",
                        "sizeInBytes": 808208
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.gff",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 998266
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.gbk",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 1726989
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fna",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 810102
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.faa",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 248164
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.ffn",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 680120
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.sqn",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 2834498
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fsa",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 818110
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.tbl",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 162352
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.err",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 416270
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.log",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 17311
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.txt",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 84
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.tsv",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 52260
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/39/acaf974185413de7f7e75d08eed62d/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 90.8,
                "inputFilesBytes": 808208,
                "outputFilesBytes": 8764570,
                "memoryInBytes": 247791616,
                "writtenBytes": 35341334,
                "readBytes": 6208626770,
                "runtimeInSeconds": 201.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "88",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut.1 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa",
                        "path": "/61/cf25917be22c0d7cc036bbb291ff61/",
                        "sizeInBytes": 826502
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.gff",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 960885
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.gbk",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 1629090
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fna",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 826502
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.faa",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 264406
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.ffn",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 740832
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.sqn",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 2409785
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fsa",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 828894
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.tbl",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 110991
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.err",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 286528
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.log",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 13794
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.txt",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 75
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.tsv",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 37909
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/7b/9602d60bfda3d0afbe2182f5e9e212/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 93.3,
                "inputFilesBytes": 826502,
                "outputFilesBytes": 8109735,
                "memoryInBytes": 150953984,
                "writtenBytes": 34685620,
                "readBytes": 18429426778,
                "runtimeInSeconds": 252.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "90",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut.1 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa",
                        "path": "/99/9391bef265fc20cdc627372089b79b/",
                        "sizeInBytes": 749812
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.gff",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 889057
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.gbk",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 1477344
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fna",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 749812
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.faa",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 249410
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.ffn",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 700441
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.sqn",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 1850529
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fsa",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 749916
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.tbl",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 103167
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.err",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 280154
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.log",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 14144
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.txt",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 74
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.tsv",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 34808
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/e5/cb263e07e01a650cebaafa50f33960/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 93.3,
                "inputFilesBytes": 749812,
                "outputFilesBytes": 7098900,
                "memoryInBytes": 129282048,
                "writtenBytes": 32519082,
                "readBytes": 16939225162,
                "runtimeInSeconds": 241.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "98",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MaxBin2-test_minigut.002 \\\n         \\\n         \\\n        SPAdes-MaxBin2-test_minigut.002.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa",
                        "path": "/28/2a3d3dcb177d556ecf9d9f6ccff251/",
                        "sizeInBytes": 860225
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.gff",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 1088578
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.gbk",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 1826255
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fna",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 862237
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.faa",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 285377
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.ffn",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 784517
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.sqn",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 2633643
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fsa",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 863797
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.tbl",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 179718
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.err",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 426276
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.log",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 24276
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.txt",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 84
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.tsv",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 57920
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/b4/8e9e371269fdf3f497b71fdd02028d/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 93.3,
                "inputFilesBytes": 860225,
                "outputFilesBytes": 9032722,
                "memoryInBytes": 112082944,
                "writtenBytes": 36740743,
                "readBytes": 6097044355,
                "runtimeInSeconds": 226.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "96",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MaxBin2-test_minigut.001 \\\n         \\\n         \\\n        MEGAHIT-MaxBin2-test_minigut.001.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa",
                        "path": "/33/d4976d8a94c2e0b2376a0ae32d2791/",
                        "sizeInBytes": 926530
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.gff",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 1083860
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.gbk",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 1838771
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fna",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 928708
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.faa",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 293458
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.ffn",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 820126
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.sqn",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 2769096
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fsa",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 932088
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.tbl",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 127550
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.err",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 346433
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.log",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 15352
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.txt",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 76
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.tsv",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 43502
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0a/302bc3450d1a96f8dd87e6ed64fa04/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 93.1,
                "inputFilesBytes": 926530,
                "outputFilesBytes": 9199064,
                "memoryInBytes": 119824384,
                "writtenBytes": 37545488,
                "readBytes": 21769610986,
                "runtimeInSeconds": 281.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "101",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MaxBin2-test_minigut_sample2.001 \\\n         \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.001.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                        "path": "/2c/3e4c6ddb49c5797adf2ca908ee03f0/",
                        "sizeInBytes": 182135
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.gff",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 228354
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.gbk",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 407910
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fna",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 182552
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.faa",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 34858
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.ffn",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 95226
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.sqn",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 713561
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fsa",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 188376
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.tbl",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 33381
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.err",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 233663
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.log",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 13140
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.txt",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 84
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.tsv",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 10226
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/06/744dd3843deedbcf17b47531d248e4/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 90.0,
                "inputFilesBytes": 182135,
                "outputFilesBytes": 2141375,
                "memoryInBytes": 98078720,
                "writtenBytes": 17161079,
                "readBytes": 5456705085,
                "runtimeInSeconds": 51.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "99",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MaxBin2-test_minigut.001 \\\n         \\\n         \\\n        SPAdes-MaxBin2-test_minigut.001.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa",
                        "path": "/e3/858abab7295808ce6e653d7e95d1c9/",
                        "sizeInBytes": 896979
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.gff",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 1068894
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.gbk",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 1778490
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fna",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 899082
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.faa",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 298472
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.ffn",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 836498
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.sqn",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 2269773
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fsa",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 899602
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.tbl",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 125294
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.err",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 355352
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.log",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 14561
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.txt",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 75
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.tsv",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 42464
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/cf/8617310dd03b78d8d373719be2b28a/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 93.2,
                "inputFilesBytes": 896979,
                "outputFilesBytes": 8588601,
                "memoryInBytes": 130396160,
                "writtenBytes": 36466404,
                "readBytes": 21515310705,
                "runtimeInSeconds": 290.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "87",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut.2 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa",
                        "path": "/d1/af5b3f93228497d9441a56a2846bdd/",
                        "sizeInBytes": 739909
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.gff",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 913681
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.gbk",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 1578355
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fna",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 739909
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.faa",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 229936
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.ffn",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 630830
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.sqn",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 2581009
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fsa",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 746513
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.tbl",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 150501
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.err",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 364481
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.log",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 16982
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.txt",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 84
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.tsv",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 48447
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/5f/58d0d9089e64102958fd0a7ed07323/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 93.1,
                "inputFilesBytes": 739909,
                "outputFilesBytes": 8000772,
                "memoryInBytes": 247533568,
                "writtenBytes": 33373720,
                "readBytes": 4849673137,
                "runtimeInSeconds": 176.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "92",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut.2 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa",
                        "path": "/2c/dc9657212417f3f1714124a02c7b37/",
                        "sizeInBytes": 857355
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.gff",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 1082269
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.gbk",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 1814551
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fna",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 857355
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.faa",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 284004
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.ffn",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 780823
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.sqn",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 2610923
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fsa",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 858707
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.tbl",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 178622
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.err",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 414773
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.log",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 24181
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.txt",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 84
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.tsv",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 57627
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/16/e9c11a77add3e2c1869b0d2c554413/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 93.1,
                "inputFilesBytes": 857355,
                "outputFilesBytes": 8963963,
                "memoryInBytes": 143466496,
                "writtenBytes": 36740984,
                "readBytes": 6052811598,
                "runtimeInSeconds": 226.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "95",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MaxBin2-test_minigut.002.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log 2> MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log.\"\n                echo -e \"MEGAHIT-MaxBin2-test_minigut.002.fa\tNo genes\" > \"MEGAHIT-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err.\"\n        echo -e \"MEGAHIT-MaxBin2-test_minigut.002.fa\tNo genes\" > \"MEGAHIT-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MaxBin2-test_minigut.002.fa\tPlacements failed\" > \"MEGAHIT-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MaxBin2-test_minigut.002.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa",
                        "path": "/8d/60203145275a433cc075347c0757f7/",
                        "sizeInBytes": 808208
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 700
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 2784
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 3825
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 5791
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa_prodigal.gff",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 207650
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 46.0,
                "inputFilesBytes": 27709921,
                "outputFilesBytes": 238960,
                "memoryInBytes": 126857216,
                "writtenBytes": 131256276,
                "readBytes": 210339688,
                "runtimeInSeconds": 25.829
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "100",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MaxBin2-test_minigut.002.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MaxBin2-test_minigut.002.fa_busco.log 2> SPAdes-MaxBin2-test_minigut.002.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MaxBin2-test_minigut.002.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MaxBin2-test_minigut.002.fa_busco.log.\"\n                echo -e \"SPAdes-MaxBin2-test_minigut.002.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MaxBin2-test_minigut.002.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MaxBin2-test_minigut.002.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MaxBin2-test_minigut.002.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MaxBin2-test_minigut.002.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MaxBin2-test_minigut.002.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MaxBin2-test_minigut.002.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MaxBin2-test_minigut.002.fa_busco.err.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut.002.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MaxBin2-test_minigut.002.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MaxBin2-test_minigut.002.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut.002.fa\tPlacements failed\" > \"SPAdes-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MaxBin2-test_minigut.002.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MaxBin2-test_minigut.002.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa",
                        "path": "/28/2a3d3dcb177d556ecf9d9f6ccff251/",
                        "sizeInBytes": 860225
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 699
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa_busco.log",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 2783
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa_busco.err",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 4024
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 6002
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa_prodigal.gff",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 209722
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 69.9,
                "inputFilesBytes": 27761938,
                "outputFilesBytes": 241440,
                "memoryInBytes": 138940416,
                "writtenBytes": 131552951,
                "readBytes": 215257364,
                "runtimeInSeconds": 18.007
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "91",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut.1.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut.1.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut.1.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut.1.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.1.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa",
                        "path": "/99/9391bef265fc20cdc627372089b79b/",
                        "sizeInBytes": 749812
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 698
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa_busco.log",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 2782
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa_busco.err",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 5021
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 7571
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa_prodigal.gff",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 145085
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 74.4,
                "inputFilesBytes": 27651525,
                "outputFilesBytes": 179367,
                "memoryInBytes": 139857920,
                "writtenBytes": 130929046,
                "readBytes": 207387885,
                "runtimeInSeconds": 19.21
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "102",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MaxBin2-test_minigut.001.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MaxBin2-test_minigut.001.fa_busco.log 2> SPAdes-MaxBin2-test_minigut.001.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MaxBin2-test_minigut.001.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MaxBin2-test_minigut.001.fa_busco.log.\"\n                echo -e \"SPAdes-MaxBin2-test_minigut.001.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MaxBin2-test_minigut.001.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MaxBin2-test_minigut.001.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MaxBin2-test_minigut.001.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MaxBin2-test_minigut.001.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MaxBin2-test_minigut.001.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MaxBin2-test_minigut.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MaxBin2-test_minigut.001.fa_busco.err.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut.001.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MaxBin2-test_minigut.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MaxBin2-test_minigut.001.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut.001.fa\tPlacements failed\" > \"SPAdes-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MaxBin2-test_minigut.001.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MaxBin2-test_minigut.001.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa",
                        "path": "/e3/858abab7295808ce6e653d7e95d1c9/",
                        "sizeInBytes": 896979
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 698
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa_busco.log",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 2781
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa_busco.err",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 5854
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 8821
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa_prodigal.gff",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 180370
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 75.8,
                "inputFilesBytes": 27798692,
                "outputFilesBytes": 216734,
                "memoryInBytes": 140537856,
                "writtenBytes": 131571642,
                "readBytes": 216474207,
                "runtimeInSeconds": 21.281
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "89",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut.1.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.1.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa",
                        "path": "/61/cf25917be22c0d7cc036bbb291ff61/",
                        "sizeInBytes": 826502
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 699
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 2783
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 5254
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 7955
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa_prodigal.gff",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 155694
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 75.3,
                "inputFilesBytes": 27728215,
                "outputFilesBytes": 190594,
                "memoryInBytes": 139149312,
                "writtenBytes": 131029835,
                "readBytes": 209101116,
                "runtimeInSeconds": 20.211
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "86",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut.2.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.2.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa",
                        "path": "/d1/af5b3f93228497d9441a56a2846bdd/",
                        "sizeInBytes": 739909
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 699
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 2783
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 3309
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 5010
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa_prodigal.gff",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 188015
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 70.8,
                "inputFilesBytes": 27641622,
                "outputFilesBytes": 218025,
                "memoryInBytes": 137428992,
                "writtenBytes": 130936193,
                "readBytes": 206224547,
                "runtimeInSeconds": 16.446
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "97",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MaxBin2-test_minigut.001.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log 2> MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log.\"\n                echo -e \"MEGAHIT-MaxBin2-test_minigut.001.fa\tNo genes\" > \"MEGAHIT-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err.\"\n        echo -e \"MEGAHIT-MaxBin2-test_minigut.001.fa\tNo genes\" > \"MEGAHIT-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MaxBin2-test_minigut.001.fa\tPlacements failed\" > \"MEGAHIT-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MaxBin2-test_minigut.001.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa",
                        "path": "/33/d4976d8a94c2e0b2376a0ae32d2791/",
                        "sizeInBytes": 926530
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 699
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 2782
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 5490
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 8304
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa_prodigal.gff",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 184589
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 75.3,
                "inputFilesBytes": 27828243,
                "outputFilesBytes": 220073,
                "memoryInBytes": 140124160,
                "writtenBytes": 131440457,
                "readBytes": 214976466,
                "runtimeInSeconds": 21.189
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "93",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut.2.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut.2.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut.2.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut.2.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.2.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa",
                        "path": "/2c/dc9657212417f3f1714124a02c7b37/",
                        "sizeInBytes": 857355
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 698
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa_busco.log",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 2782
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa_busco.err",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 4024
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 6002
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa_prodigal.gff",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 207746
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 72.1,
                "inputFilesBytes": 27759068,
                "outputFilesBytes": 239462,
                "memoryInBytes": 138792960,
                "writtenBytes": 131530487,
                "readBytes": 214947326,
                "runtimeInSeconds": 18.246
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "103",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MaxBin2-test_minigut_sample2.001.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log 2> SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log.\"\n                echo -e \"SPAdes-MaxBin2-test_minigut_sample2.001.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.001.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.001.fa\tPlacements failed\" > \"SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MaxBin2-test_minigut_sample2.001.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                        "path": "/2c/3e4c6ddb49c5797adf2ca908ee03f0/",
                        "sizeInBytes": 182135
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 703
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 2784
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 505
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 699
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa_prodigal.gff",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 97093
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 61.5,
                "inputFilesBytes": 27083848,
                "outputFilesBytes": 119994,
                "memoryInBytes": 131776511,
                "writtenBytes": 128946978,
                "readBytes": 175941475,
                "runtimeInSeconds": 12.702
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "104",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut.unbinned.1 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/0f/da507fa0645b75fe52bef79d0cff50/",
                        "sizeInBytes": 27640
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.gff",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 31901
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.gbk",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 54294
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fna",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 27618
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.faa",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 9151
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.ffn",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 25676
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.sqn",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 81434
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fsa",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 27670
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.tbl",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 3372
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.err",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 13277
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.log",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 11495
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.txt",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 64
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.tsv",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 1260
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/3b/9bd46fae396e69ddc8bc14a6c3702b/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 70.5,
                "inputFilesBytes": 27640,
                "outputFilesBytes": 287256,
                "memoryInBytes": 87420928,
                "writtenBytes": 12219537,
                "readBytes": 896824952,
                "runtimeInSeconds": 22.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "106",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut.unbinned.2 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/0c/e5297ab42995f985f9f5e10d0aa650/",
                        "sizeInBytes": 18168
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.gff",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 22532
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.gbk",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 38434
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fna",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 18146
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.faa",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 6065
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.ffn",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 16424
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.sqn",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 69271
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fsa",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 18198
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.tbl",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 3484
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.err",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 13239
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.log",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 11497
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.txt",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 64
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.tsv",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 1268
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/9c/6f3c890f8199bf500b3c3f349ddee1/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 81.3,
                "inputFilesBytes": 18168,
                "outputFilesBytes": 218666,
                "memoryInBytes": 86831104,
                "writtenBytes": 11827890,
                "readBytes": 839419653,
                "runtimeInSeconds": 16.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "111",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/25/fad435a8679b7b2d6e7a0c0376b8f8/",
                        "sizeInBytes": 3340
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.gff",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 4195
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.gbk",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 7615
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fna",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 3318
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.faa",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 1221
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.ffn",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 3303
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.sqn",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 15169
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fsa",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 3370
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.tbl",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 632
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.err",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 5887
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.log",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 12075
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.txt",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 62
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.tsv",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 290
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/06/06fd46de33d8c0bf3b8ff45b2203a4/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 79.2,
                "inputFilesBytes": 3340,
                "outputFilesBytes": 57180,
                "memoryInBytes": 89894912,
                "writtenBytes": 10600375,
                "readBytes": 246201835,
                "runtimeInSeconds": 9.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "113",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut.unbinned.2 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.unbinned.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/db/0958d1883331c1086429c2cb33e79c/",
                        "sizeInBytes": 47363
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.gff",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 55792
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.gbk",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 93099
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fna",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 47341
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.faa",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 15789
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.ffn",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 44294
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.sqn",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 116522
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fsa",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 47393
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.tbl",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 6198
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.err",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 23007
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.log",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 11286
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.txt",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 64
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.tsv",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 2205
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/51/60f81c29d813b8ff5be0c4450ebe11/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 85.8,
                "inputFilesBytes": 47363,
                "outputFilesBytes": 463034,
                "memoryInBytes": 96534528,
                "writtenBytes": 12797692,
                "readBytes": 1116259061,
                "runtimeInSeconds": 25.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "110",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/25/fad435a8679b7b2d6e7a0c0376b8f8/",
                        "sizeInBytes": 3340
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 713
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 3056
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_prodigal.gff",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 1543
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 61
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 57.2,
                "inputFilesBytes": 26905053,
                "outputFilesBytes": 23583,
                "memoryInBytes": 135233536,
                "writtenBytes": 127865228,
                "readBytes": 162474160,
                "runtimeInSeconds": 11.517
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "112",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut.unbinned.2.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/db/0958d1883331c1086429c2cb33e79c/",
                        "sizeInBytes": 47363
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 704
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 3047
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_prodigal.gff",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 9157
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 52
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 60.6,
                "inputFilesBytes": 26949076,
                "outputFilesBytes": 31170,
                "memoryInBytes": 171331584,
                "writtenBytes": 128022276,
                "readBytes": 164982129,
                "runtimeInSeconds": 12.182
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "118",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/df/ee8e1e889cebae9a0e25195f80675f/",
                        "sizeInBytes": 7810
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 712
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 3055
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_prodigal.gff",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 3584
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 60
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 60.8,
                "inputFilesBytes": 26909523,
                "outputFilesBytes": 25621,
                "memoryInBytes": 121188352,
                "writtenBytes": 127887918,
                "readBytes": 162795334,
                "runtimeInSeconds": 10.912
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "107",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/0c/e5297ab42995f985f9f5e10d0aa650/",
                        "sizeInBytes": 18168
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 704
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 2783
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 511
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 786
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_prodigal.gff",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 5605
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 60.6,
                "inputFilesBytes": 26919881,
                "outputFilesBytes": 28599,
                "memoryInBytes": 171102208,
                "writtenBytes": 127938358,
                "readBytes": 163394772,
                "runtimeInSeconds": 11.584
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST_BINS",
                "id": "117",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "BINS=$(echo \"MEGAHIT-MetaBAT2-test_minigut.2.fa MEGAHIT-MetaBAT2-test_minigut.1.fa MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa",
                        "path": "/d1/af5b3f93228497d9441a56a2846bdd/",
                        "sizeInBytes": 739909
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa",
                        "path": "/61/cf25917be22c0d7cc036bbb291ff61/",
                        "sizeInBytes": 826502
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/0f/da507fa0645b75fe52bef79d0cff50/",
                        "sizeInBytes": 27640
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/0c/e5297ab42995f985f9f5e10d0aa650/",
                        "sizeInBytes": 18168
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa",
                        "path": "/0e427f2ecabcff8cfcf237e697e946/QUAST/",
                        "sizeInBytes": 1309910
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa",
                        "path": "/0e427f2ecabcff8cfcf237e697e946/QUAST/",
                        "sizeInBytes": 1320166
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/0e427f2ecabcff8cfcf237e697e946/QUAST/",
                        "sizeInBytes": 1302657
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/0e427f2ecabcff8cfcf237e697e946/QUAST/",
                        "sizeInBytes": 1302469
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv",
                        "path": "/0e427f2ecabcff8cfcf237e697e946/QUAST/",
                        "sizeInBytes": 969
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/93/0e427f2ecabcff8cfcf237e697e946/",
                        "sizeInBytes": 68
                    }
                ],
                "avgCPU": 80.2,
                "inputFilesBytes": 1612219,
                "outputFilesBytes": 5236239,
                "memoryInBytes": 112857088,
                "writtenBytes": 18719364,
                "readBytes": 386548885,
                "runtimeInSeconds": 25.256
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST_BINS",
                "id": "137",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "BINS=$(echo \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/b0/c4c13fb5a30180e93f30b443ab1807/",
                        "sizeInBytes": 6614
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/df/ee8e1e889cebae9a0e25195f80675f/",
                        "sizeInBytes": 7810
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/75ba09ccb00d7510f1b6163fef05a8/QUAST/",
                        "sizeInBytes": 1340212
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/75ba09ccb00d7510f1b6163fef05a8/QUAST/",
                        "sizeInBytes": 1340504
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv",
                        "path": "/75ba09ccb00d7510f1b6163fef05a8/QUAST/",
                        "sizeInBytes": 672
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/a3/75ba09ccb00d7510f1b6163fef05a8/",
                        "sizeInBytes": 68
                    }
                ],
                "avgCPU": 86.2,
                "inputFilesBytes": 14424,
                "outputFilesBytes": 2681456,
                "memoryInBytes": 148332544,
                "writtenBytes": 8631947,
                "readBytes": 242460867,
                "runtimeInSeconds": 12.055
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST_BINS",
                "id": "124",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "BINS=$(echo \"MEGAHIT-MaxBin2-test_minigut.002.fa MEGAHIT-MaxBin2-test_minigut.001.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa",
                        "path": "/8d/60203145275a433cc075347c0757f7/",
                        "sizeInBytes": 808208
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa",
                        "path": "/33/d4976d8a94c2e0b2376a0ae32d2791/",
                        "sizeInBytes": 926530
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa",
                        "path": "/fa5c60846b08611e13ec4d185fc691/QUAST/",
                        "sizeInBytes": 1313233
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa",
                        "path": "/fa5c60846b08611e13ec4d185fc691/QUAST/",
                        "sizeInBytes": 1325050
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv",
                        "path": "/fa5c60846b08611e13ec4d185fc691/QUAST/",
                        "sizeInBytes": 696
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/29/fa5c60846b08611e13ec4d185fc691/",
                        "sizeInBytes": 68
                    }
                ],
                "avgCPU": 87.9,
                "inputFilesBytes": 1734737,
                "outputFilesBytes": 2639047,
                "memoryInBytes": 293257216,
                "writtenBytes": 10363684,
                "readBytes": 204599884,
                "runtimeInSeconds": 14.87
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "114",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut.unbinned.1.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/1f/e0a17ccc19b5d348df7702e0ffceea/",
                        "sizeInBytes": 86173
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 703
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 2782
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 954
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 1458
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_prodigal.gff",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 19984
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 67.0,
                "inputFilesBytes": 26987886,
                "outputFilesBytes": 44091,
                "memoryInBytes": 171896832,
                "writtenBytes": 128249990,
                "readBytes": 167537437,
                "runtimeInSeconds": 14.089
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST_BINS",
                "id": "123",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "BINS=$(echo \"SPAdes-MetaBAT2-test_minigut.1.fa SPAdes-MetaBAT2-test_minigut.2.fa SPAdes-MetaBAT2-test_minigut.unbinned.2.fa SPAdes-MetaBAT2-test_minigut.unbinned.1.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/SPAdes-MetaBAT2-test_minigut-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/SPAdes-MetaBAT2-test_minigut-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/SPAdes-MetaBAT2-test_minigut-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa",
                        "path": "/99/9391bef265fc20cdc627372089b79b/",
                        "sizeInBytes": 749812
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa",
                        "path": "/2c/dc9657212417f3f1714124a02c7b37/",
                        "sizeInBytes": 857355
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/db/0958d1883331c1086429c2cb33e79c/",
                        "sizeInBytes": 47363
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/1f/e0a17ccc19b5d348df7702e0ffceea/",
                        "sizeInBytes": 86173
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa",
                        "path": "/80bbbb344191f41d74b3c89e2d8982/QUAST/",
                        "sizeInBytes": 1340028
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa",
                        "path": "/80bbbb344191f41d74b3c89e2d8982/QUAST/",
                        "sizeInBytes": 1343418
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/80bbbb344191f41d74b3c89e2d8982/QUAST/",
                        "sizeInBytes": 1339289
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/80bbbb344191f41d74b3c89e2d8982/QUAST/",
                        "sizeInBytes": 1340840
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut-quast_summary.tsv",
                        "path": "/80bbbb344191f41d74b3c89e2d8982/QUAST/",
                        "sizeInBytes": 984
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/e3/80bbbb344191f41d74b3c89e2d8982/",
                        "sizeInBytes": 68
                    }
                ],
                "avgCPU": 92.1,
                "inputFilesBytes": 1740703,
                "outputFilesBytes": 5364627,
                "memoryInBytes": 160481280,
                "writtenBytes": 18948250,
                "readBytes": 489440048,
                "runtimeInSeconds": 25.315
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "129",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/df/ee8e1e889cebae9a0e25195f80675f/",
                        "sizeInBytes": 7810
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.gff",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 10295
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.gbk",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 18113
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fna",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 7788
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.faa",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 2422
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.ffn",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 6333
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.sqn",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 35664
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fsa",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 7840
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.tbl",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 1648
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.err",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 11211
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.log",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 11997
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.txt",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 63
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.tsv",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 665
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/02/9238e39b30320332b712a766432fdd/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 75.1,
                "inputFilesBytes": 7810,
                "outputFilesBytes": 114083,
                "memoryInBytes": 94433280,
                "writtenBytes": 11291235,
                "readBytes": 602819013,
                "runtimeInSeconds": 12.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "119",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log 2> SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log.\"\n                echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa\tPlacements failed\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                        "path": "/05/688f483a380c53145735b0ec10e7e1/",
                        "sizeInBytes": 2558
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 710
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 3218
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_prodigal.gff",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 1449
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.failed_bin.txt",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 58
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 61.2,
                "inputFilesBytes": 26904271,
                "outputFilesBytes": 23645,
                "memoryInBytes": 121352192,
                "writtenBytes": 127871834,
                "readBytes": 162425074,
                "runtimeInSeconds": 10.903
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "108",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/cd/882f370ae493dd9c8daef9d110ff5c/",
                        "sizeInBytes": 6590
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.gff",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 7521
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.gbk",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 10224
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fna",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 6568
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.faa",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 171
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.ffn",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 5323
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.sqn",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 14549
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fsa",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 6620
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.tbl",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 726
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.err",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 5106
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.log",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 12495
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.txt",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 78
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.tsv",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 351
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ee/aee47d7a4e094c1a0b74b350968648/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 78.0,
                "inputFilesBytes": 6590,
                "outputFilesBytes": 69776,
                "memoryInBytes": 171573248,
                "writtenBytes": 1866359,
                "readBytes": 63066377,
                "runtimeInSeconds": 7.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "115",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut.unbinned.1 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.unbinned.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/1f/e0a17ccc19b5d348df7702e0ffceea/",
                        "sizeInBytes": 86173
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.gff",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 104068
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.gbk",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 173625
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fna",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 86151
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.faa",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 28987
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.ffn",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 80309
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.sqn",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 239550
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fsa",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 86203
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.tbl",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 12863
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.err",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 45679
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.log",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 11491
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.txt",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 64
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.tsv",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 4601
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/31/50cac81585ab74695be039f9b06ea5/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 89.5,
                "inputFilesBytes": 86173,
                "outputFilesBytes": 873635,
                "memoryInBytes": 103673856,
                "writtenBytes": 14381638,
                "readBytes": 2952679428,
                "runtimeInSeconds": 41.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "125",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/b0/c4c13fb5a30180e93f30b443ab1807/",
                        "sizeInBytes": 6614
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.gff",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 7713
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.gbk",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 10224
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fna",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 6592
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.faa",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 171
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.ffn",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 5323
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.sqn",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 14789
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fsa",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 6644
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.tbl",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 750
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.err",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 5668
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.log",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 12550
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.txt",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 78
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.tsv",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 351
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/9c/5d065a5869540abef8c156a0756d9f/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 79.2,
                "inputFilesBytes": 6614,
                "outputFilesBytes": 70896,
                "memoryInBytes": 161796096,
                "writtenBytes": 1868516,
                "readBytes": 63066355,
                "runtimeInSeconds": 8.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "130",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MaxBin2-test_minigut_sample2.noclass.2 \\\n         \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                        "path": "/05/688f483a380c53145735b0ec10e7e1/",
                        "sizeInBytes": 2558
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.gff",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 3555
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.gbk",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 6231
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fna",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 2536
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.faa",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 721
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.ffn",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 1836
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.sqn",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 12323
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fsa",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 2588
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.tbl",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 744
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.err",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 6374
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.log",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 11963
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.txt",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 62
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.tsv",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 296
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/eb/b98febf1fc3c7eb2ff4d942a4e8622/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 83.1,
                "inputFilesBytes": 2558,
                "outputFilesBytes": 49272,
                "memoryInBytes": 46931968,
                "writtenBytes": 10256015,
                "readBytes": 154198812,
                "runtimeInSeconds": 8.0
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST_BINS",
                "id": "127",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "BINS=$(echo \"SPAdes-MaxBin2-test_minigut.002.fa SPAdes-MaxBin2-test_minigut.001.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/SPAdes-MaxBin2-test_minigut-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/SPAdes-MaxBin2-test_minigut-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/SPAdes-MaxBin2-test_minigut-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa",
                        "path": "/28/2a3d3dcb177d556ecf9d9f6ccff251/",
                        "sizeInBytes": 860225
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa",
                        "path": "/e3/858abab7295808ce6e653d7e95d1c9/",
                        "sizeInBytes": 896979
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa",
                        "path": "/68a0d6876a8cb570299735403c1868/QUAST/",
                        "sizeInBytes": 1342025
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa",
                        "path": "/68a0d6876a8cb570299735403c1868/QUAST/",
                        "sizeInBytes": 1344555
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut-quast_summary.tsv",
                        "path": "/68a0d6876a8cb570299735403c1868/QUAST/",
                        "sizeInBytes": 705
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/b0/68a0d6876a8cb570299735403c1868/",
                        "sizeInBytes": 68
                    }
                ],
                "avgCPU": 84.7,
                "inputFilesBytes": 1757204,
                "outputFilesBytes": 2687353,
                "memoryInBytes": 136884224,
                "writtenBytes": 10396176,
                "readBytes": 253813082,
                "runtimeInSeconds": 17.088
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "128",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log 2> SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log.\"\n                echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa\tPlacements failed\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                        "path": "/25/b26b7734ef45adbb9ce3eccfd31840/",
                        "sizeInBytes": 2806
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 710
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 3218
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_prodigal.gff",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 1448
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.failed_bin.txt",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 58
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 58.0,
                "inputFilesBytes": 26904519,
                "outputFilesBytes": 23644,
                "memoryInBytes": 120889344,
                "writtenBytes": 127871650,
                "readBytes": 162423447,
                "runtimeInSeconds": 11.358
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "105",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/0f/da507fa0645b75fe52bef79d0cff50/",
                        "sizeInBytes": 27640
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 705
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 3048
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_prodigal.gff",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 5407
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 53
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 61.5,
                "inputFilesBytes": 26929353,
                "outputFilesBytes": 27423,
                "memoryInBytes": 171003904,
                "writtenBytes": 127959478,
                "readBytes": 163802383,
                "runtimeInSeconds": 12.29
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST_BINS",
                "id": "136",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "BINS=$(echo \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/cd/882f370ae493dd9c8daef9d110ff5c/",
                        "sizeInBytes": 6590
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/25/fad435a8679b7b2d6e7a0c0376b8f8/",
                        "sizeInBytes": 3340
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/732a25090d4beb96662fe81e12ba19/QUAST/",
                        "sizeInBytes": 1303268
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/732a25090d4beb96662fe81e12ba19/QUAST/",
                        "sizeInBytes": 1303226
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv",
                        "path": "/732a25090d4beb96662fe81e12ba19/QUAST/",
                        "sizeInBytes": 668
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ab/732a25090d4beb96662fe81e12ba19/",
                        "sizeInBytes": 68
                    }
                ],
                "avgCPU": 80.8,
                "inputFilesBytes": 9930,
                "outputFilesBytes": 2607230,
                "memoryInBytes": 88023040,
                "writtenBytes": 8543863,
                "readBytes": 189741711,
                "runtimeInSeconds": 11.365
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST_BINS",
                "id": "135",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "BINS=$(echo \"SPAdes-MaxBin2-test_minigut_sample2.001.fa SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                        "path": "/2c/3e4c6ddb49c5797adf2ca908ee03f0/",
                        "sizeInBytes": 182135
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                        "path": "/05/688f483a380c53145735b0ec10e7e1/",
                        "sizeInBytes": 2558
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                        "path": "/25/b26b7734ef45adbb9ce3eccfd31840/",
                        "sizeInBytes": 2806
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                        "path": "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/",
                        "sizeInBytes": 1361762
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                        "path": "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/",
                        "sizeInBytes": 1339878
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                        "path": "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/",
                        "sizeInBytes": 1338618
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv",
                        "path": "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/",
                        "sizeInBytes": 805
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/53/e5dc8a91b79dee2a7146e0ffa69a0c/",
                        "sizeInBytes": 68
                    }
                ],
                "avgCPU": 89.2,
                "inputFilesBytes": 187499,
                "outputFilesBytes": 4041131,
                "memoryInBytes": 92942336,
                "writtenBytes": 13143014,
                "readBytes": 369513817,
                "runtimeInSeconds": 17.015
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "132",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MaxBin2-test_minigut_sample2.noclass.1 \\\n         \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                        "path": "/25/b26b7734ef45adbb9ce3eccfd31840/",
                        "sizeInBytes": 2806
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.gff",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 3741
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.gbk",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 6549
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fna",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 2784
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.faa",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 692
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.ffn",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 1781
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.sqn",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 12709
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fsa",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 2836
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.tbl",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 690
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.err",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 6076
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.log",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 11808
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.txt",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 62
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.tsv",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 264
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/7d/bf181196559eb203a5a821022e783e/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 73.5,
                "inputFilesBytes": 2806,
                "outputFilesBytes": 50035,
                "memoryInBytes": 58933248,
                "writtenBytes": 10287447,
                "readBytes": 154639519,
                "runtimeInSeconds": 9.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "109",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/cd/882f370ae493dd9c8daef9d110ff5c/",
                        "sizeInBytes": 6590
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 713
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 3221
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_prodigal.gff",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 1086
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 61
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 56.6,
                "inputFilesBytes": 26908303,
                "outputFilesBytes": 23291,
                "memoryInBytes": 121135104,
                "writtenBytes": 127865373,
                "readBytes": 162383429,
                "runtimeInSeconds": 11.846
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                "id": "121",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "get_mag_depths.py --bins MEGAHIT-MaxBin2-test_minigut.002.fa MEGAHIT-MaxBin2-test_minigut.001.fa \\\n                    --depths MEGAHIT-test_minigut-depth.txt.gz \\\n                    --assembler MEGAHIT \\\n                    --id test_minigut \\\n                    --binner MaxBin2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa",
                        "path": "/8d/60203145275a433cc075347c0757f7/",
                        "sizeInBytes": 808208
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa",
                        "path": "/33/d4976d8a94c2e0b2376a0ae32d2791/",
                        "sizeInBytes": 926530
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut-depth.txt.gz",
                        "path": "/f6/6a47e0524654d82be0e49d00c99f57/",
                        "sizeInBytes": 5294
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut-binDepths.tsv",
                        "path": "/0e/51dc37ddf45a8a1d257f31210ed41e/",
                        "sizeInBytes": 135
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0e/51dc37ddf45a8a1d257f31210ed41e/",
                        "sizeInBytes": 73
                    }
                ],
                "avgCPU": 41.1,
                "inputFilesBytes": 1740032,
                "outputFilesBytes": 208,
                "memoryInBytes": 67919872,
                "writtenBytes": 508,
                "readBytes": 13720647,
                "runtimeInSeconds": 5.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                "id": "131",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "get_mag_depths.py --bins MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa \\\n                    --depths MEGAHIT-test_minigut_sample2-depth.txt.gz \\\n                    --assembler MEGAHIT \\\n                    --id test_minigut_sample2 \\\n                    --binner MetaBAT2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/cd/882f370ae493dd9c8daef9d110ff5c/",
                        "sizeInBytes": 6590
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/25/fad435a8679b7b2d6e7a0c0376b8f8/",
                        "sizeInBytes": 3340
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2-depth.txt.gz",
                        "path": "/2e/a229c3916a098bd7377027fedb4d42/",
                        "sizeInBytes": 18819
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "path": "/3f/89d58d5f5a6ea4c27460a9e94b4343/",
                        "sizeInBytes": 172
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/3f/89d58d5f5a6ea4c27460a9e94b4343/",
                        "sizeInBytes": 73
                    }
                ],
                "avgCPU": 76.4,
                "inputFilesBytes": 28749,
                "outputFilesBytes": 245,
                "memoryInBytes": 48979968,
                "writtenBytes": 545,
                "readBytes": 12009413,
                "runtimeInSeconds": 2.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                "id": "133",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "get_mag_depths.py --bins SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa \\\n                    --depths SPAdes-test_minigut_sample2-depth.txt.gz \\\n                    --assembler SPAdes \\\n                    --id test_minigut_sample2 \\\n                    --binner MetaBAT2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/b0/c4c13fb5a30180e93f30b443ab1807/",
                        "sizeInBytes": 6614
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/df/ee8e1e889cebae9a0e25195f80675f/",
                        "sizeInBytes": 7810
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2-depth.txt.gz",
                        "path": "/79/03b1ed263b1ee1ec46fe396818f239/",
                        "sizeInBytes": 71343
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "path": "/83/74fe64a2bed18c6ba5af48eca390d0/",
                        "sizeInBytes": 170
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/83/74fe64a2bed18c6ba5af48eca390d0/",
                        "sizeInBytes": 73
                    }
                ],
                "avgCPU": 86.2,
                "inputFilesBytes": 85767,
                "outputFilesBytes": 243,
                "memoryInBytes": 57442304,
                "writtenBytes": 543,
                "readBytes": 12066426,
                "runtimeInSeconds": 2.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                "id": "134",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "get_mag_depths.py --bins SPAdes-MaxBin2-test_minigut_sample2.001.fa SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa \\\n                    --depths SPAdes-test_minigut_sample2-depth.txt.gz \\\n                    --assembler SPAdes \\\n                    --id test_minigut_sample2 \\\n                    --binner MaxBin2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                        "path": "/2c/3e4c6ddb49c5797adf2ca908ee03f0/",
                        "sizeInBytes": 182135
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                        "path": "/05/688f483a380c53145735b0ec10e7e1/",
                        "sizeInBytes": 2558
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                        "path": "/25/b26b7734ef45adbb9ce3eccfd31840/",
                        "sizeInBytes": 2806
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2-depth.txt.gz",
                        "path": "/79/03b1ed263b1ee1ec46fe396818f239/",
                        "sizeInBytes": 71343
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2-binDepths.tsv",
                        "path": "/6b/c98cdd973d773b166cdea86c59b9fe/",
                        "sizeInBytes": 224
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/6b/c98cdd973d773b166cdea86c59b9fe/",
                        "sizeInBytes": 73
                    }
                ],
                "avgCPU": 73.5,
                "inputFilesBytes": 258841,
                "outputFilesBytes": 297,
                "memoryInBytes": 68112384,
                "writtenBytes": 597,
                "readBytes": 12239539,
                "runtimeInSeconds": 3.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                "id": "126",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "get_mag_depths.py --bins SPAdes-MaxBin2-test_minigut.002.fa SPAdes-MaxBin2-test_minigut.001.fa \\\n                    --depths SPAdes-test_minigut-depth.txt.gz \\\n                    --assembler SPAdes \\\n                    --id test_minigut \\\n                    --binner MaxBin2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa",
                        "path": "/28/2a3d3dcb177d556ecf9d9f6ccff251/",
                        "sizeInBytes": 860225
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa",
                        "path": "/e3/858abab7295808ce6e653d7e95d1c9/",
                        "sizeInBytes": 896979
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut-depth.txt.gz",
                        "path": "/4d/44326243720ca4a7cc916be905b3c4/",
                        "sizeInBytes": 2127
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut-binDepths.tsv",
                        "path": "/a9/dfd61de3ae0e9f42b9bf29dd99ff94/",
                        "sizeInBytes": 149
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/a9/dfd61de3ae0e9f42b9bf29dd99ff94/",
                        "sizeInBytes": 73
                    }
                ],
                "avgCPU": 87.5,
                "inputFilesBytes": 1759331,
                "outputFilesBytes": 221,
                "memoryInBytes": 54366208,
                "writtenBytes": 522,
                "readBytes": 13739941,
                "runtimeInSeconds": 2.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                "id": "120",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "get_mag_depths.py --bins MEGAHIT-MetaBAT2-test_minigut.2.fa MEGAHIT-MetaBAT2-test_minigut.1.fa MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa \\\n                    --depths MEGAHIT-test_minigut-depth.txt.gz \\\n                    --assembler MEGAHIT \\\n                    --id test_minigut \\\n                    --binner MetaBAT2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa",
                        "path": "/d1/af5b3f93228497d9441a56a2846bdd/",
                        "sizeInBytes": 739909
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa",
                        "path": "/61/cf25917be22c0d7cc036bbb291ff61/",
                        "sizeInBytes": 826502
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/0f/da507fa0645b75fe52bef79d0cff50/",
                        "sizeInBytes": 27640
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/0c/e5297ab42995f985f9f5e10d0aa650/",
                        "sizeInBytes": 18168
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut-depth.txt.gz",
                        "path": "/f6/6a47e0524654d82be0e49d00c99f57/",
                        "sizeInBytes": 5294
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut-binDepths.tsv",
                        "path": "/6a/95ee9d72f227cf503178f287f9c9ef/",
                        "sizeInBytes": 244
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/6a/95ee9d72f227cf503178f287f9c9ef/",
                        "sizeInBytes": 73
                    }
                ],
                "avgCPU": 68.2,
                "inputFilesBytes": 1617513,
                "outputFilesBytes": 317,
                "memoryInBytes": 67248128,
                "writtenBytes": 617,
                "readBytes": 13598214,
                "runtimeInSeconds": 2.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                "id": "122",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "get_mag_depths.py --bins SPAdes-MetaBAT2-test_minigut.1.fa SPAdes-MetaBAT2-test_minigut.2.fa SPAdes-MetaBAT2-test_minigut.unbinned.2.fa SPAdes-MetaBAT2-test_minigut.unbinned.1.fa \\\n                    --depths SPAdes-test_minigut-depth.txt.gz \\\n                    --assembler SPAdes \\\n                    --id test_minigut \\\n                    --binner MetaBAT2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa",
                        "path": "/99/9391bef265fc20cdc627372089b79b/",
                        "sizeInBytes": 749812
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa",
                        "path": "/2c/dc9657212417f3f1714124a02c7b37/",
                        "sizeInBytes": 857355
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/db/0958d1883331c1086429c2cb33e79c/",
                        "sizeInBytes": 47363
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/1f/e0a17ccc19b5d348df7702e0ffceea/",
                        "sizeInBytes": 86173
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut-depth.txt.gz",
                        "path": "/4d/44326243720ca4a7cc916be905b3c4/",
                        "sizeInBytes": 2127
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut-binDepths.tsv",
                        "path": "/f9/e92d13b4ffdc65bdd3692de2b876c7/",
                        "sizeInBytes": 257
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/f9/e92d13b4ffdc65bdd3692de2b876c7/",
                        "sizeInBytes": 73
                    }
                ],
                "avgCPU": 77.3,
                "inputFilesBytes": 1742830,
                "outputFilesBytes": 330,
                "memoryInBytes": 50380800,
                "writtenBytes": 630,
                "readBytes": 13723524,
                "runtimeInSeconds": 2.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "116",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/b0/c4c13fb5a30180e93f30b443ab1807/",
                        "sizeInBytes": 6614
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 712
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 18129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 3220
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_prodigal.gff",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 1206
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 60
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 57.7,
                "inputFilesBytes": 26908327,
                "outputFilesBytes": 23407,
                "memoryInBytes": 120717312,
                "writtenBytes": 127866900,
                "readBytes": 162396953,
                "runtimeInSeconds": 11.721
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY",
                "id": "138",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "QUAST_BIN=$(echo \"MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv SPAdes-MetaBAT2-test_minigut-quast_summary.tsv SPAdes-MaxBin2-test_minigut-quast_summary.tsv MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv\" | sed 's/[][]//g')\n    IFS=', ' read -r -a quast_bin <<< \"$QUAST_BIN\"\n    for quast_file in \"${quast_bin[@]}\"; do\n        if ! [ -f \"quast_summary.tsv\" ]; then\n            cp \"${quast_file}\" \"quast_summary.tsv\"\n        else\n            tail -n +2 \"${quast_file}\" >> \"quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS_SUMMARY\":\n        sed: $(sed --version 2>&1 | sed -n 1p | sed 's/sed (GNU sed) //')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.QUAST_BINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BIN_SUMMARY"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv",
                        "path": "/0e427f2ecabcff8cfcf237e697e946/QUAST/",
                        "sizeInBytes": 969
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv",
                        "path": "/75ba09ccb00d7510f1b6163fef05a8/QUAST/",
                        "sizeInBytes": 672
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv",
                        "path": "/fa5c60846b08611e13ec4d185fc691/QUAST/",
                        "sizeInBytes": 696
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut-quast_summary.tsv",
                        "path": "/80bbbb344191f41d74b3c89e2d8982/QUAST/",
                        "sizeInBytes": 984
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut-quast_summary.tsv",
                        "path": "/68a0d6876a8cb570299735403c1868/QUAST/",
                        "sizeInBytes": 705
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv",
                        "path": "/732a25090d4beb96662fe81e12ba19/QUAST/",
                        "sizeInBytes": 668
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv",
                        "path": "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/",
                        "sizeInBytes": 805
                    },
                    {
                        "link": "output",
                        "name": "quast_summary.tsv",
                        "path": "/3e/1dd392ebd00f7498212164127990ba/",
                        "sizeInBytes": 3069
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/3e/1dd392ebd00f7498212164127990ba/",
                        "sizeInBytes": 50
                    }
                ],
                "avgCPU": 15.2,
                "inputFilesBytes": 5499,
                "outputFilesBytes": 3119,
                "memoryInBytes": 3129344,
                "writtenBytes": 5021,
                "readBytes": 147072,
                "runtimeInSeconds": 0.26
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                "id": "139",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "plot_mag_depths.py --bin_depths MEGAHIT-MaxBin2-test_minigut-binDepths.tsv                     --groups sample_groups.tsv                     --out \"MEGAHIT-MaxBin2-test_minigut-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut-binDepths.tsv",
                        "path": "/0e/51dc37ddf45a8a1d257f31210ed41e/",
                        "sizeInBytes": 135
                    },
                    {
                        "link": "input",
                        "name": "sample_groups.tsv",
                        "path": "/11/13d0058bde55bb4f6f22246229827e/",
                        "sizeInBytes": 38
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut-binDepths.heatmap.png",
                        "path": "/d2/547c82e39ef05977978241fc65d4a8/",
                        "sizeInBytes": 19850
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/d2/547c82e39ef05977978241fc65d4a8/",
                        "sizeInBytes": 98
                    }
                ],
                "avgCPU": 41.5,
                "inputFilesBytes": 173,
                "outputFilesBytes": 19948,
                "memoryInBytes": 126615552,
                "writtenBytes": 20295,
                "readBytes": 34358475,
                "runtimeInSeconds": 10.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                "id": "140",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "plot_mag_depths.py --bin_depths MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.tsv                     --groups sample_groups.tsv                     --out \"MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "path": "/3f/89d58d5f5a6ea4c27460a9e94b4343/",
                        "sizeInBytes": 172
                    },
                    {
                        "link": "input",
                        "name": "sample_groups.tsv",
                        "path": "/11/13d0058bde55bb4f6f22246229827e/",
                        "sizeInBytes": 38
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.heatmap.png",
                        "path": "/56/c0dfe28532e158c500482f1a27e37d/",
                        "sizeInBytes": 22168
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/56/c0dfe28532e158c500482f1a27e37d/",
                        "sizeInBytes": 98
                    }
                ],
                "avgCPU": 90.1,
                "inputFilesBytes": 210,
                "outputFilesBytes": 22266,
                "memoryInBytes": 127590400,
                "writtenBytes": 22598,
                "readBytes": 35902700,
                "runtimeInSeconds": 4.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                "id": "141",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "plot_mag_depths.py --bin_depths SPAdes-MetaBAT2-test_minigut_sample2-binDepths.tsv                     --groups sample_groups.tsv                     --out \"SPAdes-MetaBAT2-test_minigut_sample2-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "path": "/83/74fe64a2bed18c6ba5af48eca390d0/",
                        "sizeInBytes": 170
                    },
                    {
                        "link": "input",
                        "name": "sample_groups.tsv",
                        "path": "/11/13d0058bde55bb4f6f22246229827e/",
                        "sizeInBytes": 38
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2-binDepths.heatmap.png",
                        "path": "/bf/afb1637bffc0858e9f84cb10a77788/",
                        "sizeInBytes": 22503
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/bf/afb1637bffc0858e9f84cb10a77788/",
                        "sizeInBytes": 98
                    }
                ],
                "avgCPU": 90.3,
                "inputFilesBytes": 208,
                "outputFilesBytes": 22601,
                "memoryInBytes": 127578112,
                "writtenBytes": 22933,
                "readBytes": 35861736,
                "runtimeInSeconds": 4.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                "id": "142",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "plot_mag_depths.py --bin_depths SPAdes-MaxBin2-test_minigut_sample2-binDepths.tsv                     --groups sample_groups.tsv                     --out \"SPAdes-MaxBin2-test_minigut_sample2-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2-binDepths.tsv",
                        "path": "/6b/c98cdd973d773b166cdea86c59b9fe/",
                        "sizeInBytes": 224
                    },
                    {
                        "link": "input",
                        "name": "sample_groups.tsv",
                        "path": "/11/13d0058bde55bb4f6f22246229827e/",
                        "sizeInBytes": 38
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2-binDepths.heatmap.png",
                        "path": "/4e/f151f6b1416b71c24977395ee58991/",
                        "sizeInBytes": 29934
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/4e/f151f6b1416b71c24977395ee58991/",
                        "sizeInBytes": 98
                    }
                ],
                "avgCPU": 89.2,
                "inputFilesBytes": 262,
                "outputFilesBytes": 30032,
                "memoryInBytes": 124686336,
                "writtenBytes": 30364,
                "readBytes": 38274333,
                "runtimeInSeconds": 4.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                "id": "143",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "plot_mag_depths.py --bin_depths SPAdes-MaxBin2-test_minigut-binDepths.tsv                     --groups sample_groups.tsv                     --out \"SPAdes-MaxBin2-test_minigut-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut-binDepths.tsv",
                        "path": "/a9/dfd61de3ae0e9f42b9bf29dd99ff94/",
                        "sizeInBytes": 149
                    },
                    {
                        "link": "input",
                        "name": "sample_groups.tsv",
                        "path": "/11/13d0058bde55bb4f6f22246229827e/",
                        "sizeInBytes": 38
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut-binDepths.heatmap.png",
                        "path": "/f7/8b9d5a47642ee2c2929dfa6026708f/",
                        "sizeInBytes": 19675
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/f7/8b9d5a47642ee2c2929dfa6026708f/",
                        "sizeInBytes": 98
                    }
                ],
                "avgCPU": 90.4,
                "inputFilesBytes": 187,
                "outputFilesBytes": 19773,
                "memoryInBytes": 128696320,
                "writtenBytes": 20105,
                "readBytes": 34059457,
                "runtimeInSeconds": 4.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                "id": "144",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "plot_mag_depths.py --bin_depths MEGAHIT-MetaBAT2-test_minigut-binDepths.tsv                     --groups sample_groups.tsv                     --out \"MEGAHIT-MetaBAT2-test_minigut-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut-binDepths.tsv",
                        "path": "/6a/95ee9d72f227cf503178f287f9c9ef/",
                        "sizeInBytes": 244
                    },
                    {
                        "link": "input",
                        "name": "sample_groups.tsv",
                        "path": "/11/13d0058bde55bb4f6f22246229827e/",
                        "sizeInBytes": 38
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut-binDepths.heatmap.png",
                        "path": "/45/c4f2b6c9d8115b5f90a06f367b951b/",
                        "sizeInBytes": 29358
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/45/c4f2b6c9d8115b5f90a06f367b951b/",
                        "sizeInBytes": 98
                    }
                ],
                "avgCPU": 90.7,
                "inputFilesBytes": 282,
                "outputFilesBytes": 29456,
                "memoryInBytes": 127959040,
                "writtenBytes": 29788,
                "readBytes": 38901028,
                "runtimeInSeconds": 4.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                "id": "145",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "plot_mag_depths.py --bin_depths SPAdes-MetaBAT2-test_minigut-binDepths.tsv                     --groups sample_groups.tsv                     --out \"SPAdes-MetaBAT2-test_minigut-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut-binDepths.tsv",
                        "path": "/f9/e92d13b4ffdc65bdd3692de2b876c7/",
                        "sizeInBytes": 257
                    },
                    {
                        "link": "input",
                        "name": "sample_groups.tsv",
                        "path": "/11/13d0058bde55bb4f6f22246229827e/",
                        "sizeInBytes": 38
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut-binDepths.heatmap.png",
                        "path": "/9c/79fb3c7c6fbee7e29e04ac97e694a6/",
                        "sizeInBytes": 28470
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/9c/79fb3c7c6fbee7e29e04ac97e694a6/",
                        "sizeInBytes": 98
                    }
                ],
                "avgCPU": 91.4,
                "inputFilesBytes": 295,
                "outputFilesBytes": 28567,
                "memoryInBytes": 130236416,
                "writtenBytes": 28900,
                "readBytes": 38589743,
                "runtimeInSeconds": 4.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                "id": "146",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "get_mag_depths_summary.py --depths MEGAHIT-MaxBin2-test_minigut-binDepths.tsv MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.tsv SPAdes-MetaBAT2-test_minigut_sample2-binDepths.tsv SPAdes-MaxBin2-test_minigut_sample2-binDepths.tsv SPAdes-MaxBin2-test_minigut-binDepths.tsv MEGAHIT-MetaBAT2-test_minigut-binDepths.tsv SPAdes-MetaBAT2-test_minigut-binDepths.tsv                             --out \"bin_depths_summary.tsv\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_SUMMARY\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BIN_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut-binDepths.tsv",
                        "path": "/0e/51dc37ddf45a8a1d257f31210ed41e/",
                        "sizeInBytes": 135
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "path": "/3f/89d58d5f5a6ea4c27460a9e94b4343/",
                        "sizeInBytes": 172
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "path": "/83/74fe64a2bed18c6ba5af48eca390d0/",
                        "sizeInBytes": 170
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2-binDepths.tsv",
                        "path": "/6b/c98cdd973d773b166cdea86c59b9fe/",
                        "sizeInBytes": 224
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut-binDepths.tsv",
                        "path": "/a9/dfd61de3ae0e9f42b9bf29dd99ff94/",
                        "sizeInBytes": 149
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut-binDepths.tsv",
                        "path": "/6a/95ee9d72f227cf503178f287f9c9ef/",
                        "sizeInBytes": 244
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut-binDepths.tsv",
                        "path": "/f9/e92d13b4ffdc65bdd3692de2b876c7/",
                        "sizeInBytes": 257
                    },
                    {
                        "link": "output",
                        "name": "bin_depths_summary.tsv",
                        "path": "/12/f23515f1d57ae46421f6f0e13c854c/",
                        "sizeInBytes": 1124
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/12/f23515f1d57ae46421f6f0e13c854c/",
                        "sizeInBytes": 81
                    }
                ],
                "avgCPU": 35.7,
                "inputFilesBytes": 1351,
                "outputFilesBytes": 1205,
                "memoryInBytes": 59297792,
                "writtenBytes": 1525,
                "readBytes": 10393292,
                "runtimeInSeconds": 4.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                "id": "147",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"MEGAHIT-${BASH_REMATCH[3]}-test_minigut.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"MEGAHIT-MaxBin2-test_minigut.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"MEGAHIT-MaxBin2-test_minigut.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 700
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 699
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.png",
                        "path": "/0a/0d559a4b8d0071a64d4d4e63b17b87/",
                        "sizeInBytes": 110518
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.R",
                        "path": "/0a/0d559a4b8d0071a64d4d4e63b17b87/",
                        "sizeInBytes": 4344
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0a/0d559a4b8d0071a64d4d4e63b17b87/",
                        "sizeInBytes": 86
                    }
                ],
                "avgCPU": 61.9,
                "inputFilesBytes": 1399,
                "outputFilesBytes": 114948,
                "memoryInBytes": 156749824,
                "writtenBytes": 171821,
                "readBytes": 40377987,
                "runtimeInSeconds": 10.764
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                "id": "153",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"MEGAHIT-${BASH_REMATCH[3]}-test_minigut_sample2.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"MEGAHIT-MetaBAT2-test_minigut_sample2.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"MEGAHIT-MetaBAT2-test_minigut_sample2.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 713
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 713
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.png",
                        "path": "/e7/f3feb3afc5ddd255b1f2d28edb333f/",
                        "sizeInBytes": 105237
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.R",
                        "path": "/e7/f3feb3afc5ddd255b1f2d28edb333f/",
                        "sizeInBytes": 4471
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/e7/f3feb3afc5ddd255b1f2d28edb333f/",
                        "sizeInBytes": 86
                    }
                ],
                "avgCPU": 83.3,
                "inputFilesBytes": 1426,
                "outputFilesBytes": 109794,
                "memoryInBytes": 161546240,
                "writtenBytes": 112655,
                "readBytes": 40377172,
                "runtimeInSeconds": 7.729
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                "id": "149",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"SPAdes-${BASH_REMATCH[3]}-test_minigut.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"SPAdes-MaxBin2-test_minigut.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"SPAdes-MaxBin2-test_minigut.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 699
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 698
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.png",
                        "path": "/a4/7c5c785b7f11dc6c98b083bca5d613/",
                        "sizeInBytes": 112941
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.R",
                        "path": "/a4/7c5c785b7f11dc6c98b083bca5d613/",
                        "sizeInBytes": 4336
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/a4/7c5c785b7f11dc6c98b083bca5d613/",
                        "sizeInBytes": 86
                    }
                ],
                "avgCPU": 82.9,
                "inputFilesBytes": 1396,
                "outputFilesBytes": 117363,
                "memoryInBytes": 162091008,
                "writtenBytes": 120156,
                "readBytes": 40376943,
                "runtimeInSeconds": 7.68
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                "id": "151",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"MEGAHIT-${BASH_REMATCH[3]}-test_minigut.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"MEGAHIT-MetaBAT2-test_minigut.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"MEGAHIT-MetaBAT2-test_minigut.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 699
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 699
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 704
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 705
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.png",
                        "path": "/c5/4827cc93cde0b20721292a00c0971e/",
                        "sizeInBytes": 145991
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.R",
                        "path": "/c5/4827cc93cde0b20721292a00c0971e/",
                        "sizeInBytes": 4784
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/c5/4827cc93cde0b20721292a00c0971e/",
                        "sizeInBytes": 86
                    }
                ],
                "avgCPU": 83.0,
                "inputFilesBytes": 2807,
                "outputFilesBytes": 150861,
                "memoryInBytes": 160497664,
                "writtenBytes": 154160,
                "readBytes": 40394067,
                "runtimeInSeconds": 7.612
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                "id": "152",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"SPAdes-${BASH_REMATCH[3]}-test_minigut_sample2.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"SPAdes-MaxBin2-test_minigut_sample2.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"SPAdes-MaxBin2-test_minigut_sample2.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 703
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 710
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 710
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.png",
                        "path": "/69/5f870daa570f9ee4579d708f3a3b68/",
                        "sizeInBytes": 131829
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.R",
                        "path": "/69/5f870daa570f9ee4579d708f3a3b68/",
                        "sizeInBytes": 4666
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/69/5f870daa570f9ee4579d708f3a3b68/",
                        "sizeInBytes": 86
                    }
                ],
                "avgCPU": 82.8,
                "inputFilesBytes": 2123,
                "outputFilesBytes": 136581,
                "memoryInBytes": 162029568,
                "writtenBytes": 139680,
                "readBytes": 40385747,
                "runtimeInSeconds": 7.804
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                "id": "150",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"SPAdes-${BASH_REMATCH[3]}-test_minigut.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"SPAdes-MetaBAT2-test_minigut.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"SPAdes-MetaBAT2-test_minigut.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 698
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 698
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 704
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 703
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.png",
                        "path": "/ad/5892e7bcfa04be19c8e4a313a307c5/",
                        "sizeInBytes": 147571
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.R",
                        "path": "/ad/5892e7bcfa04be19c8e4a313a307c5/",
                        "sizeInBytes": 4768
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ad/5892e7bcfa04be19c8e4a313a307c5/",
                        "sizeInBytes": 86
                    }
                ],
                "avgCPU": 82.5,
                "inputFilesBytes": 2802,
                "outputFilesBytes": 152425,
                "memoryInBytes": 160849920,
                "writtenBytes": 155714,
                "readBytes": 40393986,
                "runtimeInSeconds": 7.993
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                "id": "154",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"SPAdes-${BASH_REMATCH[3]}-test_minigut_sample2.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"SPAdes-MetaBAT2-test_minigut_sample2.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"SPAdes-MetaBAT2-test_minigut_sample2.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 712
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 712
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.png",
                        "path": "/db/573ffa1e5e78f1a2a2941ce6340173/",
                        "sizeInBytes": 106203
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.R",
                        "path": "/db/573ffa1e5e78f1a2a2941ce6340173/",
                        "sizeInBytes": 4463
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/db/573ffa1e5e78f1a2a2941ce6340173/",
                        "sizeInBytes": 86
                    }
                ],
                "avgCPU": 80.6,
                "inputFilesBytes": 1424,
                "outputFilesBytes": 110752,
                "memoryInBytes": 160735232,
                "writtenBytes": 113609,
                "readBytes": 40377155,
                "runtimeInSeconds": 7.622
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                "id": "148",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "summary_busco.py  -ss short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt   -o busco_summary.tsv\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_SUMMARY\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BIN_SUMMARY"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 700
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 699
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 698
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 698
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 699
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 699
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 699
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 698
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 703
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 713
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 704
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 712
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 704
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 703
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 710
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 710
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 705
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 713
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 712
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 61
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 52
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 60
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.failed_bin.txt",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 58
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.failed_bin.txt",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 58
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 53
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 61
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 60
                    },
                    {
                        "link": "output",
                        "name": "busco_summary.tsv",
                        "path": "/b5/a1ee3f2ac4873500275e4261b8c40a/",
                        "sizeInBytes": 1781
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/b5/a1ee3f2ac4873500275e4261b8c40a/",
                        "sizeInBytes": 77
                    }
                ],
                "avgCPU": 75.0,
                "inputFilesBytes": 13842,
                "outputFilesBytes": 1857,
                "memoryInBytes": 53166080,
                "writtenBytes": 2162,
                "readBytes": 10440802,
                "runtimeInSeconds": 1.0
            },
            {
                "name": "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                "id": "155",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "def args = task.ext.args ?: ''\ntemplate 'dumpsoftwareversions.py'"
                },
                "parents": [
                    "NFCORE_MAG.MAG.FASTQC_TRIMMED",
                    "NFCORE_MAG.MAG.FASTQC_RAW",
                    "NFCORE_MAG.MAG.FASTP",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                    "NFCORE_MAG.MAG.NANOPLOT_RAW",
                    "NFCORE_MAG.MAG.PORECHOP",
                    "NFCORE_MAG.MAG.NANOLYSE",
                    "NFCORE_MAG.MAG.FILTLONG",
                    "NFCORE_MAG.MAG.CENTRIFUGE",
                    "NFCORE_MAG.MAG.KRAKEN2",
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID",
                    "NFCORE_MAG.MAG.QUAST",
                    "NFCORE_MAG.MAG.PRODIGAL",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.PROKKA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "collated_versions.yml",
                        "path": "/c1/f9762963534aab9eea70cf358c6bcd/",
                        "sizeInBytes": 3324
                    },
                    {
                        "link": "output",
                        "name": "software_versions.yml",
                        "path": "/88/e05321a3ea4e89fc6bd5050c765259/",
                        "sizeInBytes": 1100
                    },
                    {
                        "link": "output",
                        "name": "software_versions_mqc.yml",
                        "path": "/88/e05321a3ea4e89fc6bd5050c765259/",
                        "sizeInBytes": 6315
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/88/e05321a3ea4e89fc6bd5050c765259/",
                        "sizeInBytes": 74
                    }
                ],
                "avgCPU": 32.7,
                "inputFilesBytes": 3324,
                "outputFilesBytes": 7489,
                "memoryInBytes": 1785856,
                "writtenBytes": 7708,
                "readBytes": 939883,
                "runtimeInSeconds": 0.745
            },
            {
                "name": "NFCORE_MAG.MAG.BIN_SUMMARY",
                "id": "156",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "combine_tables.py --depths_summary bin_depths_summary.tsv                     --busco_summary busco_summary.tsv                     --quast_summary quast_summary.tsv                                          --out bin_summary.tsv\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BIN_SUMMARY\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "bin_depths_summary.tsv",
                        "path": "/12/f23515f1d57ae46421f6f0e13c854c/",
                        "sizeInBytes": 1124
                    },
                    {
                        "link": "input",
                        "name": "busco_summary.tsv",
                        "path": "/b5/a1ee3f2ac4873500275e4261b8c40a/",
                        "sizeInBytes": 1781
                    },
                    {
                        "link": "input",
                        "name": "quast_summary.tsv",
                        "path": "/3e/1dd392ebd00f7498212164127990ba/",
                        "sizeInBytes": 3069
                    },
                    {
                        "link": "output",
                        "name": "bin_summary.tsv",
                        "path": "/38/267c4da019d070e70a33074290c93a/",
                        "sizeInBytes": 6031
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/38/267c4da019d070e70a33074290c93a/",
                        "sizeInBytes": 66
                    }
                ],
                "avgCPU": 63.4,
                "inputFilesBytes": 5974,
                "outputFilesBytes": 6096,
                "memoryInBytes": 60579840,
                "writtenBytes": 6390,
                "readBytes": 10401764,
                "runtimeInSeconds": 2.0
            },
            {
                "name": "NFCORE_MAG.MAG.MULTIQC",
                "id": "157",
                "type": "compute",
                "command": {
                    "program": "",
                    "arguments": "multiqc -f  .\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:MULTIQC\":\n            multiqc: $( multiqc --version | sed -e \"s/multiqc, version //g\" )\n        END_VERSIONS"
                },
                "parents": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.FASTQC_RAW",
                    "NFCORE_MAG.MAG.FASTQC_TRIMMED",
                    "NFCORE_MAG.MAG.QUAST",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.FASTP"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "multiqc_config.yml",
                        "path": "/mag/assets/",
                        "sizeInBytes": 1796
                    },
                    {
                        "link": "input",
                        "name": "workflow_summary_mqc.yaml",
                        "path": "/6f/532c18d0a1139011180d991b5d2adc/",
                        "sizeInBytes": 3354
                    },
                    {
                        "link": "input",
                        "name": "software_versions_mqc.yml",
                        "path": "/88/e05321a3ea4e89fc6bd5050c765259/",
                        "sizeInBytes": 6315
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_1_fastqc.zip",
                        "path": "/6f/2f1ecb5353f866c1f6539117e859bd/",
                        "sizeInBytes": 290235
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_2_fastqc.zip",
                        "path": "/6f/2f1ecb5353f866c1f6539117e859bd/",
                        "sizeInBytes": 288657
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_1_fastqc.zip",
                        "path": "/50/450582b8fedacb9adbb8d3bd395bc7/",
                        "sizeInBytes": 288243
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_2_fastqc.zip",
                        "path": "/50/450582b8fedacb9adbb8d3bd395bc7/",
                        "sizeInBytes": 284771
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.trimmed_1_fastqc.zip",
                        "path": "/76/d4869464a5074828810a263f222c16/",
                        "sizeInBytes": 284126
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.trimmed_2_fastqc.zip",
                        "path": "/76/d4869464a5074828810a263f222c16/",
                        "sizeInBytes": 280611
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.trimmed_1_fastqc.zip",
                        "path": "/8b/951f59ff6eff428229c9d8deeb003f/",
                        "sizeInBytes": 287336
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.trimmed_2_fastqc.zip",
                        "path": "/8b/951f59ff6eff428229c9d8deeb003f/",
                        "sizeInBytes": 289084
                    },
                    {
                        "link": "input",
                        "name": "basic_stats",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 92290
                    },
                    {
                        "link": "input",
                        "name": "icarus.html",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 53372
                    },
                    {
                        "link": "input",
                        "name": "icarus_viewers",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 833150
                    },
                    {
                        "link": "input",
                        "name": "metaquast.log",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 730
                    },
                    {
                        "link": "input",
                        "name": "predicted_genes",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 334
                    },
                    {
                        "link": "input",
                        "name": "quast.log",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 3941
                    },
                    {
                        "link": "input",
                        "name": "report.html",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 393153
                    },
                    {
                        "link": "input",
                        "name": "report.pdf",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 33778
                    },
                    {
                        "link": "input",
                        "name": "report.tex",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 1229
                    },
                    {
                        "link": "input",
                        "name": "report.tsv",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 534
                    },
                    {
                        "link": "input",
                        "name": "report.txt",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 1447
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.tex",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 1062
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.tsv",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 534
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.txt",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 1051
                    },
                    {
                        "link": "input",
                        "name": "basic_stats",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 61148
                    },
                    {
                        "link": "input",
                        "name": "icarus.html",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 53373
                    },
                    {
                        "link": "input",
                        "name": "icarus_viewers",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 802216
                    },
                    {
                        "link": "input",
                        "name": "metaquast.log",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 724
                    },
                    {
                        "link": "input",
                        "name": "predicted_genes",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 262
                    },
                    {
                        "link": "input",
                        "name": "quast.log",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 3572
                    },
                    {
                        "link": "input",
                        "name": "report.html",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 382977
                    },
                    {
                        "link": "input",
                        "name": "report.pdf",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 28437
                    },
                    {
                        "link": "input",
                        "name": "report.tex",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 1223
                    },
                    {
                        "link": "input",
                        "name": "report.tsv",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 528
                    },
                    {
                        "link": "input",
                        "name": "report.txt",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 1470
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.tex",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 1056
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.tsv",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 528
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.txt",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 1053
                    },
                    {
                        "link": "input",
                        "name": "basic_stats",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 87922
                    },
                    {
                        "link": "input",
                        "name": "icarus.html",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 53364
                    },
                    {
                        "link": "input",
                        "name": "icarus_viewers",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 783442
                    },
                    {
                        "link": "input",
                        "name": "metaquast.log",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 698
                    },
                    {
                        "link": "input",
                        "name": "predicted_genes",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 347
                    },
                    {
                        "link": "input",
                        "name": "quast.log",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 3837
                    },
                    {
                        "link": "input",
                        "name": "report.html",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 372013
                    },
                    {
                        "link": "input",
                        "name": "report.pdf",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 31492
                    },
                    {
                        "link": "input",
                        "name": "report.tex",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 1243
                    },
                    {
                        "link": "input",
                        "name": "report.tsv",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 549
                    },
                    {
                        "link": "input",
                        "name": "report.txt",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 1263
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.tex",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 1076
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.tsv",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 549
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.txt",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 1043
                    },
                    {
                        "link": "input",
                        "name": "basic_stats",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 57895
                    },
                    {
                        "link": "input",
                        "name": "icarus.html",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 53365
                    },
                    {
                        "link": "input",
                        "name": "icarus_viewers",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 794220
                    },
                    {
                        "link": "input",
                        "name": "metaquast.log",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 692
                    },
                    {
                        "link": "input",
                        "name": "predicted_genes",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 266
                    },
                    {
                        "link": "input",
                        "name": "quast.log",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 3486
                    },
                    {
                        "link": "input",
                        "name": "report.html",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 382475
                    },
                    {
                        "link": "input",
                        "name": "report.pdf",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 28688
                    },
                    {
                        "link": "input",
                        "name": "report.tex",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 1241
                    },
                    {
                        "link": "input",
                        "name": "report.tsv",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 547
                    },
                    {
                        "link": "input",
                        "name": "report.txt",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 1286
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.tex",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 1074
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.tsv",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 547
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.txt",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 1043
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2.bowtie2.log",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 600
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.bowtie2.log",
                        "path": "/d3/c332ef8efac5a782924ca4114ed8cd/",
                        "sizeInBytes": 599
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut.bowtie2.log",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 599
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.bowtie2.log",
                        "path": "/34/adfd77975be3d0c5eaa06394c1187e/",
                        "sizeInBytes": 600
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.fastp.json",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 124522
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.fastp.json",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 112556
                    },
                    {
                        "link": "output",
                        "name": "multiqc_report.html",
                        "path": "/0d/e596dfa2a9ea40d2a56cad1f4d12a0/",
                        "sizeInBytes": 1333122
                    },
                    {
                        "link": "output",
                        "name": "multiqc_data",
                        "path": "/0d/e596dfa2a9ea40d2a56cad1f4d12a0/",
                        "sizeInBytes": 2220269
                    },
                    {
                        "link": "output",
                        "name": "multiqc_plots",
                        "path": "/0d/e596dfa2a9ea40d2a56cad1f4d12a0/",
                        "sizeInBytes": 2676269
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0d/e596dfa2a9ea40d2a56cad1f4d12a0/",
                        "sizeInBytes": 44
                    }
                ],
                "avgCPU": 89.9,
                "inputFilesBytes": 7964838,
                "outputFilesBytes": 6229704,
                "memoryInBytes": 161636352,
                "writtenBytes": 12125665,
                "readBytes": 1228869392,
                "runtimeInSeconds": 113.025
            }
        ],
        "machines": [
            {
                "nodeName": "dirt02",
                "system": "Linux",
                "release": "5.15.0-48-generic",
                "architecture": "x86_64",
                "cpu": {
                    "count": 1,
                    "speed": 2400
                }
            }
        ],
        "makespanInSeconds": 4104
    }
}